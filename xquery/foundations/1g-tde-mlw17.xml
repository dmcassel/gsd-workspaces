<export><workspace name="1g-tde-mlw17"><query name="create and validate template" focus="false" listorder="1" taborder="1" active="true" database="3662323880148367790" server="10757672201913389096" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
(:
  Create a simple Template that defines a SQL view over documents.
  Validate the Template.
:)

let $my-first-TDE:=
&lt;template xmlns="http://marklogic.com/xdmp/tde"&gt;
 &lt;context&gt;/customer&lt;/context&gt;
   &lt;rows&gt;
     &lt;row&gt;
       &lt;schema-name&gt;customer&lt;/schema-name&gt;
       &lt;view-name&gt;customers&lt;/view-name&gt;
       &lt;columns&gt;
         &lt;column&gt;
           &lt;name&gt;customer_id&lt;/name&gt;
           &lt;scalar-type&gt;long&lt;/scalar-type&gt;
           &lt;val&gt;source/id&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
         &lt;/column&gt;
        &lt;column&gt;
           &lt;name&gt;last_name&lt;/name&gt;
           &lt;scalar-type&gt;string&lt;/scalar-type&gt;
           &lt;val&gt;source/lname&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
        &lt;/column&gt;
        &lt;column&gt;
           &lt;name&gt;city&lt;/name&gt;
           &lt;scalar-type&gt;string&lt;/scalar-type&gt;
           &lt;val&gt;source/city&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
        &lt;/column&gt;
        &lt;column&gt;
           &lt;name&gt;state&lt;/name&gt;
           &lt;scalar-type&gt;string&lt;/scalar-type&gt;
           &lt;val&gt;source/state&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
        &lt;/column&gt;
        &lt;column&gt;
           &lt;name&gt;shipping_zip&lt;/name&gt;
           &lt;scalar-type&gt;string&lt;/scalar-type&gt;
           &lt;val&gt;canonical/shipping-zip&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
        &lt;/column&gt;
      &lt;/columns&gt;
    &lt;/row&gt;
  &lt;/rows&gt;
&lt;/template&gt;

return 
 tde:validate( 
   $my-first-TDE 
   ) 
</query><query name="test template" focus="false" listorder="2" taborder="2" active="true" database="3662323880148367790" server="10757672201913389096" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";

(:
  Create a simple Template that defines a SQL view over documents.
  Test the Template by seeing which rows are generated when you apply it to a document.
:)

let $my-first-TDE:=
&lt;template xmlns="http://marklogic.com/xdmp/tde"&gt;
 &lt;context&gt;/customer&lt;/context&gt;
   &lt;rows&gt;
     &lt;row&gt;
       &lt;schema-name&gt;customer&lt;/schema-name&gt;
       &lt;view-name&gt;customers&lt;/view-name&gt;
       &lt;columns&gt;
         &lt;column&gt;
           &lt;name&gt;customer_id&lt;/name&gt;
           &lt;scalar-type&gt;long&lt;/scalar-type&gt;
           &lt;val&gt;source/id&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
         &lt;/column&gt;
        &lt;column&gt;
           &lt;name&gt;last_name&lt;/name&gt;
           &lt;scalar-type&gt;string&lt;/scalar-type&gt;
           &lt;val&gt;source/lname&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
        &lt;/column&gt;
        &lt;column&gt;
           &lt;name&gt;city&lt;/name&gt;
           &lt;scalar-type&gt;string&lt;/scalar-type&gt;
           &lt;val&gt;source/city&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
        &lt;/column&gt;
        &lt;column&gt;
           &lt;name&gt;state&lt;/name&gt;
           &lt;scalar-type&gt;string&lt;/scalar-type&gt;
           &lt;val&gt;source/state&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
        &lt;/column&gt;
        &lt;column&gt;
           &lt;name&gt;shipping_zip&lt;/name&gt;
           &lt;scalar-type&gt;string&lt;/scalar-type&gt;
           &lt;val&gt;canonical/shipping-zip&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
        &lt;/column&gt;
      &lt;/columns&gt;
    &lt;/row&gt;
  &lt;/rows&gt;
&lt;/template&gt;
return 
 tde:node-data-extract( 
   fn:doc("/customer-2.xml"), 
   $my-first-TDE 
   ) 
</query><query name="insert the template" focus="false" listorder="3" taborder="3" active="true" database="3662323880148367790" server="10757672201913389096" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";

(:
  Insert the Template.
  The function tde:template-insert() will validate the template; insert it into the Schemas database; and assign the special collection "http://marklogic.com/xdmp/tde"
:)

import module "http://marklogic.com/xdmp/tde" at "/MarkLogic/tde.xqy";

let $my-first-TDE:=
&lt;template xmlns="http://marklogic.com/xdmp/tde"&gt;
 &lt;context&gt;/customer&lt;/context&gt;
   &lt;rows&gt;
     &lt;row&gt;
       &lt;schema-name&gt;customer&lt;/schema-name&gt;
       &lt;view-name&gt;customers&lt;/view-name&gt;
       &lt;columns&gt;
         &lt;column&gt;
           &lt;name&gt;customer_id&lt;/name&gt;
           &lt;scalar-type&gt;long&lt;/scalar-type&gt;
           &lt;val&gt;source/id&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
         &lt;/column&gt;
        &lt;column&gt;
           &lt;name&gt;last_name&lt;/name&gt;
           &lt;scalar-type&gt;string&lt;/scalar-type&gt;
           &lt;val&gt;source/lname&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
        &lt;/column&gt;
        &lt;column&gt;
           &lt;name&gt;city&lt;/name&gt;
           &lt;scalar-type&gt;string&lt;/scalar-type&gt;
           &lt;val&gt;source/city&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
        &lt;/column&gt;
        &lt;column&gt;
           &lt;name&gt;state&lt;/name&gt;
           &lt;scalar-type&gt;string&lt;/scalar-type&gt;
           &lt;val&gt;source/state&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
        &lt;/column&gt;
        &lt;column&gt;
           &lt;name&gt;shipping_zip&lt;/name&gt;
           &lt;scalar-type&gt;string&lt;/scalar-type&gt;
           &lt;val&gt;canonical/shipping-zip&lt;/val&gt;
           &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
        &lt;/column&gt;
      &lt;/columns&gt;
    &lt;/row&gt;
  &lt;/rows&gt;
&lt;/template&gt;

return tde:template-insert(
 "/test/my-first-TDE.xml" ,
 $my-first-TDE ,
 xdmp:default-permissions() ,
 "TDE-EA"
 )
</query><query name="show the view" focus="false" listorder="4" taborder="4" active="true" database="3662323880148367790" server="10757672201913389096" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";

(:
  Show the view you just created.
:)

 tde:get-view ( "customer", "customers" )
 
</query><query name="simple SQL query" focus="false" listorder="5" taborder="5" active="true" database="3662323880148367790" server="10757672201913389096" database-name="Documents" server-name="App-Services" mode="sql">/*
 # simple SQL query using the SQL mode in Query Console
*/
 
select * from customers

</query><query name="simple SQL XQuery" focus="false" listorder="6" taborder="6" active="true" database="3662323880148367790" server="10757672201913389096" database-name="Documents" server-name="App-Services" mode="xquery">
(:
 # simple SQL query from XQuery
:)
 
xdmp:sql('select * from customers')
</query><query name="simple SQL JavaScript" focus="false" listorder="7" taborder="7" active="true" database="3662323880148367790" server="10757672201913389096" database-name="Documents" server-name="App-Services" mode="javascript">xdmp.sql('select * from customers')
</query><query name="Combination Query" focus="false" listorder="8" taborder="8" active="true" database="3662323880148367790" server="10757672201913389096" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";

(:
 # combination SQL query from XQuery
:)
 
xdmp:sql(
  "select 
    customer_id, last_name 
    from customers
    where 
      state = 'Texas'"
    ,
  (),
  (),
  cts:word-query('Novick')
  )
</query><query name="Optic API - XQuery" focus="false" listorder="9" taborder="9" active="true" database="3662323880148367790" server="10757672201913389096" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
 
import module namespace op="http://marklogic.com/optic"
     at "/MarkLogic/optic.xqy";

op:from-view("customer", "customers")
   =&gt; op:select(("customer_id", "last_name", "shipping_zip"))
   =&gt; op:order-by("shipping_zip")
   =&gt; op:result()</query><query name="Optic API JavaScript" focus="false" listorder="10" taborder="10" active="true" database="3662323880148367790" server="10757672201913389096" database-name="Documents" server-name="App-Services" mode="javascript">'use strict';

const op = require('/MarkLogic/optic');

op.fromView('customer', 'customers')
   .select(['customer_id', 'last_name', 'shipping_zip'])
   .orderBy('shipping_zip')
   .result();
</query><query name="Intro" focus="true" listorder="11" taborder="11" active="true" database="3662323880148367790" server="10757672201913389096" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";&#13;</query></workspace></export>
