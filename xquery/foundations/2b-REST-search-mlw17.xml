<export><workspace name="2b-REST-search-mlw17"><query name="GET search" focus="false" listorder="3" taborder="5" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
(: Using REST to search the database.  
 : For more info see https://docs.marklogic.com/REST/GET/v1/search
 :)
xdmp:http-get( "http://localhost:8000/v1/search?q=36628", 
                   &lt;options xmlns="xdmp:http"&gt;
                    &lt;authentication&gt;
                       &lt;username&gt;admin&lt;/username&gt;
                       &lt;password&gt;admin&lt;/password&gt;
                    &lt;/authentication&gt;
                   &lt;/options&gt;)
</query><query name="GET search collection" focus="false" listorder="4" taborder="6" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
(: Using REST to search the database within a particular collection.
 :)

xdmp:http-get( "http://localhost:8000/v1/search?q=Zaam-Dox&amp;amp;collection=product", 
                   &lt;options xmlns="xdmp:http"&gt;
                    &lt;authentication&gt;
                       &lt;username&gt;admin&lt;/username&gt;
                       &lt;password&gt;admin&lt;/password&gt;
                    &lt;/authentication&gt;
                   &lt;/options&gt;)[2]
</query><query name="GET format JSON" focus="false" listorder="5" taborder="7" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
(: Using REST to search the database within a particular collection,
   specifying the return type as JSON.
 :)
xdmp:http-get( "http://localhost:8000/v1/search?q=Zaam-Dox&amp;amp;collection=product&amp;amp;format=json", 
                   &lt;options xmlns="xdmp:http"&gt;
                    &lt;authentication&gt;
                       &lt;username&gt;admin&lt;/username&gt;
                       &lt;password&gt;admin&lt;/password&gt;
                    &lt;/authentication&gt;
                   &lt;/options&gt;)[2]
</query><query name="fn:doc()" focus="false" listorder="6" taborder="8" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
(: Use this to explore document URIs returned in the search response. :)

fn:doc("/product-3.xml")</query><query name="POST element value-query" focus="false" listorder="7" taborder="9" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
(:
 : Structured Search with REST
 : Here the structured query is JSON
:)
let $structured-query :=
'{
    "query" : {
      "queries": [{
          "value-query" : {
              "element": {
                "name": "shipping-zip",
                "ns": ""
              },
                "text": [
                  "36628"
                ]
           }
      }]
    }
 }'
 
return 
xdmp:http-post(fn:concat("http://localhost:8000/v1/search"), 
                   &lt;options xmlns="xdmp:http"&gt;
                    &lt;authentication&gt;
                       &lt;username&gt;admin&lt;/username&gt;
                       &lt;password&gt;admin&lt;/password&gt;
                    &lt;/authentication&gt;
                      &lt;headers&gt;
                       &lt;content-type&gt;application/json&lt;/content-type&gt;
                    &lt;/headers&gt;
                   &lt;/options&gt;,
                   document{ $structured-query }
                ) [2]</query><query name="POST and-query" focus="false" listorder="8" taborder="10" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
(:

Structured search with REST.  This script is the RESTful
representation of the following:

cts:search(fn:collection("product"), 
   cts:and-query(
            (cts:element-query(xs:QName("relationship"), "complement"),
             cts:element-query(xs:QName("name"), "Sonair"))
           )
   )
   
The REST API provides additional benefits within it's parameters such as pagination.
:)
let $structured-query :=
'{ "query" : {
      "queries": [{
         "and-query": {
            "queries": [{
                 "value-query" : {
                     "element": {
                     "name": "relationship",
                     "ns": ""
                 },
                  "text": [
                           "complement"
                  ]
                 },
                 "value-query" : {
                     "element": {
                     "name": "name",
                     "ns": ""
                 },
                  "text": [
                           "sonair"
                  ]
                }
            }]
          }
      }]
    }
 }'
 
return 
xdmp:http-post(fn:concat("http://localhost:8000/v1/search"), 
                   &lt;options xmlns="xdmp:http"&gt;
                    &lt;authentication&gt;
                       &lt;username&gt;admin&lt;/username&gt;
                       &lt;password&gt;admin&lt;/password&gt;
                    &lt;/authentication&gt;
                      &lt;headers&gt;
                       &lt;content-type&gt;application/json&lt;/content-type&gt;
                    &lt;/headers&gt;
                   &lt;/options&gt;,
                   document{ $structured-query }
                ) [2]
                
                </query><query name="POST geo query JSON" focus="false" listorder="9" taborder="11" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
(:
cts:search(fn:collection("customer"),
  cts:element-pair-geospatial-query(xs:QName("billing_address"),
    xs:QName("latitude"), xs:QName("longitude"),  cts:circle(20, cts:point(31.760423, -106.485124))))
:)

let $structured-query :=
'{"query": {
    "queries": [{
      "geo-elem-pair-query": {
        "parent": { "ns": "", "name": "billing_address" },
        "lat": { "ns": "", "name": "latitude" },
        "lon": { "ns": "", "name": "longitude" },
        "circle": [
          {
            "radius": 20,
            "point": [{ "latitude": 31.760423, "longitude": -106.485124 } ]
       
          } 
        ]
      }
    }] 
}}'
 
return 
xdmp:http-post(fn:concat("http://localhost:8000/v1/search"), 
                   &lt;options xmlns="xdmp:http"&gt;
                    &lt;authentication&gt;
                       &lt;username&gt;admin&lt;/username&gt;
                       &lt;password&gt;admin&lt;/password&gt;
                    &lt;/authentication&gt;
                      &lt;headers&gt;
                       &lt;content-type&gt;application/json&lt;/content-type&gt;
                    &lt;/headers&gt;
                   &lt;/options&gt;,
                   document{ $structured-query }
                ) [2]</query><query name="POST geo query XML" focus="false" listorder="10" taborder="12" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
(:
cts:search(fn:collection("customer"),
  cts:element-pair-geospatial-query(xs:QName("billing_address"),
    xs:QName("latitude"), xs:QName("longitude"),  cts:circle(20, cts:point(31.760423, -106.485124))))
:)

let $structured-query :=
&lt;query xmlns="http://marklogic.com/appservices/search"&gt;
  &lt;geo-elem-pair-query&gt;
    &lt;parent ns="" name="billing_address"/&gt; 
    &lt;lat ns="" name="latitude"/&gt; 
    &lt;lon ns="" name="longitude"/&gt;
    &lt;circle&gt;
      &lt;radius&gt;20&lt;/radius&gt;
      &lt;point&gt; &lt;latitude&gt;31.760423&lt;/latitude&gt; &lt;longitude&gt;-106.485124&lt;/longitude&gt; &lt;/point&gt;
    &lt;/circle&gt;
  &lt;/geo-elem-pair-query&gt;
&lt;/query&gt;
 
return 
xdmp:http-post(fn:concat("http://localhost:8000/v1/search"), 
                   &lt;options xmlns="xdmp:http"&gt;
                    &lt;authentication&gt;
                       &lt;username&gt;admin&lt;/username&gt;
                       &lt;password&gt;admin&lt;/password&gt;
                    &lt;/authentication&gt;
                      &lt;headers&gt;
                       &lt;content-type&gt;application/xml&lt;/content-type&gt;
                    &lt;/headers&gt;
                   &lt;/options&gt;,
                   document{ $structured-query }
                ) [2]</query><query name="POST with cts:parse" focus="false" listorder="12" taborder="14" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";

let $structured-query := cts:parse("merchant NEAR/5 parkway AND texas")
return 
xdmp:http-post(fn:concat("http://localhost:8000/v1/search"), 
                   &lt;options xmlns="xdmp:http"&gt;
                    &lt;authentication&gt;
                       &lt;username&gt;admin&lt;/username&gt;
                       &lt;password&gt;admin&lt;/password&gt;
                    &lt;/authentication&gt;
                      &lt;headers&gt;
                       &lt;content-type&gt;application/xml&lt;/content-type&gt;
                    &lt;/headers&gt;
                   &lt;/options&gt;,
                   document{ $structured-query }
                ) [2]
</query><query name="cts:parse" focus="false" listorder="11" taborder="13" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
(: cts:parse() parses a query string and returns a cts:query which
 : can be serialized as our structured query document
 : http://docs.marklogic.com/cts:parse
 :
 : Run the below and compare the results.
:)

cts:parse("merchant NEAR/5 parkway AND texas"),
&lt;document&gt;{cts:parse("merchant NEAR/5 parkway AND texas")}&lt;/document&gt;</query><query name="Intro" focus="true" listorder="1" taborder="1" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">"
In this workspace we continue to explore search and query
with a focus on using the REST API.
"</query><query name="load customers, orders, and products" focus="false" listorder="2" taborder="2" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";
(: Use this tab to reinsert customer, order, and product documents 
 : into the DB prior to starting this workspace. 
 :)
 
let $cust-a-records :=
&lt;dataset&gt;
   &lt;customer&gt;
     &lt;metadata&gt;
       &lt;source&gt;POS&lt;/source&gt;
       &lt;date&gt;2017-05-09-04:00&lt;/date&gt;
       &lt;lineage&gt;v01 transform&lt;/lineage&gt;
     &lt;/metadata&gt;
     &lt;canonical&gt;
      &lt;shipping-zip&gt;36628&lt;/shipping-zip&gt;
     &lt;/canonical&gt;
     &lt;source&gt;
       &lt;customer_id&gt;1&lt;/customer_id&gt;
       &lt;first_name&gt;Nicholas&lt;/first_name&gt;
       &lt;last_name&gt;Wheeler&lt;/last_name&gt;
       &lt;email&gt;nwheeler0@cdbaby.com&lt;/email&gt;
       &lt;ssn&gt;803-28-0354&lt;/ssn&gt;
       &lt;phone&gt;1-(915)325-2812&lt;/phone&gt;
       &lt;billing_address&gt;
         &lt;street&gt;46958 Lucky Trail&lt;/street&gt;
         &lt;city&gt;El Paso&lt;/city&gt;
         &lt;state&gt;Texas&lt;/state&gt;
         &lt;zip&gt;79950&lt;/zip&gt;
         &lt;latitude&gt;31.6948&lt;/latitude&gt;
         &lt;longitude&gt;-106.3&lt;/longitude&gt;
       &lt;/billing_address&gt;
       &lt;shipping_address&gt;
         &lt;street&gt;9 Thierer Place&lt;/street&gt;
         &lt;city&gt;Mobile&lt;/city&gt;
         &lt;state&gt;Alabama&lt;/state&gt;
         &lt;zip&gt;36628&lt;/zip&gt;
         &lt;latitude&gt;30.6589&lt;/latitude&gt;
         &lt;longitude&gt;-88.178&lt;/longitude&gt;
       &lt;/shipping_address&gt;
       &lt;region&gt;south&lt;/region&gt;
       &lt;segment&gt;top&lt;/segment&gt;
      &lt;/source&gt;
     &lt;/customer&gt;
   &lt;customer&gt;
      &lt;metadata&gt;
         &lt;source&gt;POS&lt;/source&gt;
         &lt;date&gt;2017-05-09-04:00&lt;/date&gt;
         &lt;lineage&gt;v01 transform&lt;/lineage&gt;
     &lt;/metadata&gt;
     &lt;canonical&gt;
        &lt;shipping-zip&gt;39505&lt;/shipping-zip&gt;
     &lt;/canonical&gt;
     &lt;source&gt;
        &lt;customer_id&gt;2&lt;/customer_id&gt;
        &lt;first_name&gt;Richard&lt;/first_name&gt;
        &lt;last_name&gt;Kennedy&lt;/last_name&gt;
        &lt;email&gt;rkennedy1@apache.org&lt;/email&gt;
        &lt;ssn&gt;253-66-8162&lt;/ssn&gt;
        &lt;phone&gt;1-(815)551-8998&lt;/phone&gt;
        &lt;billing_address&gt;
           &lt;street&gt;01233 7th Parkway&lt;/street&gt;
           &lt;city&gt;Rockford&lt;/city&gt;
           &lt;state&gt;Illinois&lt;/state&gt;
           &lt;zip&gt;61110&lt;/zip&gt;
           &lt;latitude&gt;42.3254&lt;/latitude&gt;
           &lt;longitude&gt;-89.1705&lt;/longitude&gt;
        &lt;/billing_address&gt;
        &lt;shipping_address&gt;
           &lt;street&gt;19137 Superior Point&lt;/street&gt;
           &lt;city&gt;Gulfport&lt;/city&gt;
           &lt;state&gt;Mississippi&lt;/state&gt;
           &lt;zip&gt;39505&lt;/zip&gt;
           &lt;latitude&gt;30.4158&lt;/latitude&gt;
           &lt;longitude&gt;-89.0684&lt;/longitude&gt;
        &lt;/shipping_address&gt;
        &lt;region&gt;central&lt;/region&gt;
        &lt;segment&gt;regular&lt;/segment&gt;
     &lt;/source&gt;
    &lt;/customer&gt;
    &lt;customer&gt;
        &lt;metadata&gt;
           &lt;source&gt;POS&lt;/source&gt;
           &lt;date&gt;2017-05-09-04:00&lt;/date&gt;
           &lt;lineage&gt;v01 transform&lt;/lineage&gt;
        &lt;/metadata&gt;
        &lt;canonical&gt;
           &lt;shipping-zip&gt;23272&lt;/shipping-zip&gt;
        &lt;/canonical&gt;
        &lt;source&gt;
           &lt;customer_id&gt;3&lt;/customer_id&gt;
           &lt;first_name&gt;Bonnie&lt;/first_name&gt;
           &lt;last_name&gt;Clark&lt;/last_name&gt;
           &lt;email&gt;bclark2@example.com&lt;/email&gt;
           &lt;ssn&gt;947-95-7536&lt;/ssn&gt;
          &lt;phone&gt;1-(515)755-7166&lt;/phone&gt;
          &lt;billing_address&gt;
             &lt;street&gt;4 Red Cloud Plaza&lt;/street&gt;
             &lt;city&gt;Des Moines&lt;/city&gt;
             &lt;state&gt;Iowa&lt;/state&gt;
             &lt;zip&gt;50305&lt;/zip&gt;
             &lt;latitude&gt;41.6727&lt;/latitude&gt;
             &lt;longitude&gt;-93.5722&lt;/longitude&gt;
          &lt;/billing_address&gt;
          &lt;shipping_address&gt;
             &lt;street&gt;96328 Sutteridge Court&lt;/street&gt;
             &lt;city&gt;Richmond&lt;/city&gt;
             &lt;state&gt;Virginia&lt;/state&gt;
             &lt;zip&gt;23272&lt;/zip&gt;
             &lt;latitude&gt;37.5242&lt;/latitude&gt;
             &lt;longitude&gt;-77.4932&lt;/longitude&gt;
          &lt;/shipping_address&gt;
          &lt;region&gt;central&lt;/region&gt;
          &lt;segment&gt;coupon&lt;/segment&gt;
        &lt;/source&gt;
      &lt;/customer&gt;
&lt;/dataset&gt;

let $cust-a-docs := $cust-a-records/customer
let $count := fn:count($cust-a-docs)
let $cust-a-reset :=
        for $d at $idx in $cust-a-docs 
        let $uri := fn:concat("/denormalized/customer-",$idx,".xml")
        return  xdmp:document-insert($uri, &lt;customer&gt;{$d/node()}&lt;/customer&gt;, (), ("customer", "system-a", "enveloped", "harmonized"))
      
 
let $cust-b-records :=
&lt;dataset&gt;
  &lt;customer&gt;
    &lt;metadata&gt;
      &lt;source&gt;Finance&lt;/source&gt;
      &lt;date&gt;2017-05-09-04:00&lt;/date&gt;
      &lt;lineage&gt;v01 transform&lt;/lineage&gt;
    &lt;/metadata&gt;
    &lt;canonical&gt;
      &lt;shipping-zip&gt;79934&lt;/shipping-zip&gt;
    &lt;/canonical&gt;
    &lt;source&gt;
      &lt;id&gt;82&lt;/id&gt;
      &lt;fname&gt;Fanechka&lt;/fname&gt;
      &lt;lname&gt;Applebee&lt;/lname&gt;
      &lt;phone&gt;1-(915)318-6020&lt;/phone&gt;
      &lt;ssn&gt;482-78-7787&lt;/ssn&gt;
      &lt;street&gt;3833 Merchant Parkway&lt;/street&gt;
      &lt;city&gt;El Paso&lt;/city&gt;
      &lt;state&gt;Texas&lt;/state&gt;
      &lt;postal&gt;79934&lt;/postal&gt;
    &lt;/source&gt;
  &lt;/customer&gt;
  &lt;customer&gt;
    &lt;metadata&gt;
      &lt;source&gt;Finance&lt;/source&gt;
      &lt;date&gt;2017-05-09-04:00&lt;/date&gt;
      &lt;lineage&gt;v01 transform&lt;/lineage&gt;
    &lt;/metadata&gt;
    &lt;canonical&gt;
      &lt;shipping-zip&gt;36628&lt;/shipping-zip&gt;
    &lt;/canonical&gt;
    &lt;source&gt;
      &lt;id&gt;42&lt;/id&gt;
      &lt;fname&gt;Gunther&lt;/fname&gt;
      &lt;lname&gt;Revely&lt;/lname&gt;
      &lt;phone&gt;1-(251)551-0806&lt;/phone&gt;
      &lt;ssn&gt;729-28-2635&lt;/ssn&gt;
      &lt;street&gt;76291 Memorial Parkway&lt;/street&gt;
      &lt;city&gt;Mobile&lt;/city&gt;
      &lt;state&gt;Alabama&lt;/state&gt;
      &lt;postal&gt;36628&lt;/postal&gt;
    &lt;/source&gt;
  &lt;/customer&gt;
  &lt;customer&gt;
    &lt;metadata&gt;
      &lt;source&gt;Finance&lt;/source&gt;
      &lt;date&gt;2017-05-09-04:00&lt;/date&gt;
      &lt;lineage&gt;v01 transform&lt;/lineage&gt;
    &lt;/metadata&gt;
    &lt;canonical&gt; 
      &lt;shipping-zip&gt;96825&lt;/shipping-zip&gt;
    &lt;/canonical&gt;
    &lt;source&gt;
      &lt;id&gt;1&lt;/id&gt;
      &lt;fname&gt;Richard&lt;/fname&gt;
      &lt;lname&gt;Roostan&lt;/lname&gt;
      &lt;phone&gt;1-(808)408-2422&lt;/phone&gt;
      &lt;ssn&gt;120-59-9484&lt;/ssn&gt;
      &lt;street&gt;2 Northwestern Road&lt;/street&gt;
      &lt;city&gt;Honolulu&lt;/city&gt;
      &lt;state&gt;Hawaii&lt;/state&gt;
      &lt;postal&gt;96825&lt;/postal&gt;
    &lt;/source&gt;
  &lt;/customer&gt;
  &lt;customer&gt;
    &lt;metadata&gt;
      &lt;source&gt;Finance&lt;/source&gt;
      &lt;date&gt;2017-05-09-04:00&lt;/date&gt;
      &lt;lineage&gt;v01 transform&lt;/lineage&gt;
    &lt;/metadata&gt;
    &lt;canonical&gt;
      &lt;shipping-zip&gt;75226&lt;/shipping-zip&gt;
    &lt;/canonical&gt;
    &lt;source&gt;
      &lt;id&gt;9&lt;/id&gt;
      &lt;fname&gt;Kristina&lt;/fname&gt;
      &lt;lname&gt;Frankel&lt;/lname&gt;
      &lt;phone&gt;1-(469)618-6671&lt;/phone&gt;
      &lt;ssn&gt;355-62-0033&lt;/ssn&gt;
      &lt;street&gt;889 Novick Center&lt;/street&gt;
      &lt;city&gt;Dallas&lt;/city&gt;
      &lt;state&gt;Texas&lt;/state&gt;
      &lt;postal&gt;75226&lt;/postal&gt;
    &lt;/source&gt;
  &lt;/customer&gt; 
  &lt;customer&gt;
    &lt;metadata&gt;
      &lt;source&gt;Finance&lt;/source&gt;
      &lt;date&gt;2017-05-09-04:00&lt;/date&gt;
      &lt;lineage&gt;v01 transform&lt;/lineage&gt;
    &lt;/metadata&gt;
    &lt;canonical&gt;
      &lt;shipping-zip&gt;79405&lt;/shipping-zip&gt;
    &lt;/canonical&gt;
      &lt;source&gt;
      &lt;id&gt;33&lt;/id&gt;
      &lt;fname&gt;Kora&lt;/fname&gt;
      &lt;lname&gt;McIntosh&lt;/lname&gt;
      &lt;phone&gt;1-(806)259-1852&lt;/phone&gt;
      &lt;ssn&gt;258-12-1494&lt;/ssn&gt;
      &lt;street&gt;27 John Wall Street&lt;/street&gt;
      &lt;city&gt;Lubbock&lt;/city&gt;
      &lt;state&gt;Texas&lt;/state&gt;
      &lt;postal&gt;79405&lt;/postal&gt;
    &lt;/source&gt;
    &lt;/customer&gt;
&lt;/dataset&gt;

let $cust-b-docs := $cust-b-records/customer
let $count := fn:count($cust-b-docs)
let $cust-b-reset :=
        for $d at $idx in $cust-b-docs 
        let $uri := fn:concat("/customer-",$idx,".xml")
        return xdmp:document-insert($uri, &lt;customer&gt;{$d/node()}&lt;/customer&gt;, (), ("customer", "system-b", "enveloped", "harmonized"))

 
let $product-doc :=
&lt;dataset&gt;
  &lt;record&gt;
    &lt;id&gt;1&lt;/id&gt;
    &lt;name&gt;Refreshing AC&lt;/name&gt;
    &lt;sku&gt;664229048-8&lt;/sku&gt;
    &lt;category&gt;home central units&lt;/category&gt;
    &lt;related_products&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;massive ac&lt;/product_name&gt;
        &lt;relationship&gt;substitute&lt;/relationship&gt;
      &lt;/related_product&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;central ac&lt;/product_name&gt;
        &lt;relationship&gt;required&lt;/relationship&gt;
      &lt;/related_product&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;high volume ac&lt;/product_name&gt;
        &lt;relationship&gt;upgrade&lt;/relationship&gt;
      &lt;/related_product&gt;
    &lt;/related_products&gt;
  &lt;/record&gt;
  &lt;record&gt;
    &lt;id&gt;2&lt;/id&gt;
    &lt;name&gt;Biodex&lt;/name&gt;
    &lt;sku&gt;949037899-2&lt;/sku&gt;
    &lt;category&gt;home central units&lt;/category&gt;
    &lt;related_products&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;dapibus 5000&lt;/product_name&gt;
        &lt;relationship&gt;complement&lt;/relationship&gt;
      &lt;/related_product&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;est air freshener&lt;/product_name&gt;
        &lt;relationship&gt;required&lt;/relationship&gt;
      &lt;/related_product&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;deluxe trails package&lt;/product_name&gt;
        &lt;relationship&gt;upgrade&lt;/relationship&gt;
      &lt;/related_product&gt;
    &lt;/related_products&gt;
  &lt;/record&gt;
  &lt;record&gt;
    &lt;id&gt;3&lt;/id&gt;
    &lt;name&gt;Sonair&lt;/name&gt;
    &lt;sku&gt;317294048-9&lt;/sku&gt;
    &lt;category&gt;applications&lt;/category&gt;
    &lt;related_products&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;foehammer online quest&lt;/product_name&gt;
        &lt;relationship&gt;complement&lt;/relationship&gt;
      &lt;/related_product&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;nam staff of logic&lt;/product_name&gt;
        &lt;relationship&gt;upgrade&lt;/relationship&gt;
      &lt;/related_product&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;lucky trail adventure pack&lt;/product_name&gt;
        &lt;relationship&gt;complement&lt;/relationship&gt;
      &lt;/related_product&gt;
    &lt;/related_products&gt;
  &lt;/record&gt;
  &lt;record&gt;
    &lt;id&gt;4&lt;/id&gt;
    &lt;name&gt;Zaam-Dox&lt;/name&gt;
    &lt;sku&gt;405785176-3&lt;/sku&gt;
    &lt;category&gt;proin&lt;/category&gt;
    &lt;related_products&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;feugiat&lt;/product_name&gt;
        &lt;relationship&gt;substitute&lt;/relationship&gt;
      &lt;/related_product&gt;
    &lt;/related_products&gt;
  &lt;/record&gt;
  &lt;record&gt;
    &lt;id&gt;5&lt;/id&gt;
    &lt;name&gt;Domainer&lt;/name&gt;
    &lt;sku&gt;189152305-8&lt;/sku&gt;
    &lt;category&gt;quis&lt;/category&gt;
    &lt;related_products&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;metus&lt;/product_name&gt;
        &lt;relationship&gt;upgrade&lt;/relationship&gt;
      &lt;/related_product&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;sit&lt;/product_name&gt;
        &lt;relationship&gt;upgrade&lt;/relationship&gt;
      &lt;/related_product&gt;
      &lt;related_product&gt;
        &lt;product_name&gt;sit&lt;/product_name&gt;
        &lt;relationship&gt;upgrade&lt;/relationship&gt;
      &lt;/related_product&gt;
    &lt;/related_products&gt;
  &lt;/record&gt;
&lt;/dataset&gt;

let $prod-docs := $product-doc/record
let $count := fn:count($prod-docs)
let $prod-doc-reset :=
        for $d at $idx in $prod-docs 
        let $uri := fn:concat("/product-",$idx,".xml")
        return xdmp:document-insert($uri, &lt;product&gt;{$d/node()}&lt;/product&gt;, (), "product")

let $order-doc :=
&lt;dataset&gt;
  &lt;order&gt;
  &lt;triples&gt;
    &lt;sem:triple xmlns:sem="http://marklogic.com/semantics"&gt;
      &lt;sem:subject&gt;http://www.marklogic.com/orders#Customer3&lt;/sem:subject&gt;
      &lt;sem:predicate&gt;http://www.marklogic.com/orders#placed&lt;/sem:predicate&gt;
      &lt;sem:object&gt;http://www.marklogic.com/orders#Order1&lt;/sem:object&gt;
    &lt;/sem:triple&gt;
    &lt;sem:triple xmlns:sem="http://marklogic.com/semantics"&gt;
      &lt;sem:subject&gt;http://www.marklogic.com/orders#Order1&lt;/sem:subject&gt;
      &lt;sem:predicate&gt;http://www.marklogic.com/orders#contains&lt;/sem:predicate&gt;
      &lt;sem:object&gt;http://www.marklogic.com/orders#Product4&lt;/sem:object&gt;
    &lt;/sem:triple&gt;
    &lt;sem:triple xmlns:sem="http://marklogic.com/semantics"&gt;
      &lt;sem:subject&gt;http://www.marklogic.com/orders#Order1&lt;/sem:subject&gt;
      &lt;sem:predicate&gt;http://www.marklogic.com/orders#contains&lt;/sem:predicate&gt;
      &lt;sem:object&gt;http://www.marklogic.com/orders#Product2&lt;/sem:object&gt;
    &lt;/sem:triple&gt;
    &lt;sem:triple xmlns:sem="http://marklogic.com/semantics"&gt;
      &lt;sem:subject&gt;http://www.marklogic.com/orders#Order1&lt;/sem:subject&gt;
      &lt;sem:predicate&gt;http://www.marklogic.com/orders#contains&lt;/sem:predicate&gt;
      &lt;sem:object&gt;http://www.marklogic.com/orders#Product3&lt;/sem:object&gt;
    &lt;/sem:triple&gt;
   &lt;/triples&gt;
   &lt;source&gt;
    &lt;id&gt;1&lt;/id&gt;
    &lt;order_date&gt;2016-06-20&lt;/order_date&gt;
    &lt;ship_date&gt;2016-06-25 06:09:29 UTC&lt;/ship_date&gt;
    &lt;customer_id&gt;3&lt;/customer_id&gt;
    &lt;payment_terms&gt;COD&lt;/payment_terms&gt;
    &lt;order_lines&gt;
      &lt;order_line&gt;
        &lt;product&gt;4&lt;/product&gt;
        &lt;quantity&gt;88&lt;/quantity&gt;
        &lt;unit_price&gt;37.26&lt;/unit_price&gt;
        &lt;discount&gt;0.02&lt;/discount&gt;
        &lt;total&gt;65.58&lt;/total&gt;
        &lt;notes&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin interdum mauris non ligula pellentesque ultrices. Phasellus id sapien in sapien iaculis congue. Vivamus metus arcu, adipiscing molestie, hendrerit at, vulputate vitae, nisl. Aenean lectus. Pellentesque eget nunc.&lt;/notes&gt;
      &lt;/order_line&gt;
      &lt;order_line&gt;
        &lt;product&gt;2&lt;/product&gt;
        &lt;quantity&gt;72&lt;/quantity&gt;
        &lt;unit_price&gt;55.92&lt;/unit_price&gt;
        &lt;discount&gt;0.98&lt;/discount&gt;
        &lt;total&gt;3945.72&lt;/total&gt;
        &lt;notes&gt;Nulla tellus.&lt;/notes&gt;
      &lt;/order_line&gt;
      &lt;order_line&gt;
        &lt;product&gt;3&lt;/product&gt;
        &lt;quantity&gt;23&lt;/quantity&gt;
        &lt;unit_price&gt;44.36&lt;/unit_price&gt;
        &lt;discount&gt;0.27&lt;/discount&gt;
        &lt;total&gt;275.48&lt;/total&gt;
        &lt;notes/&gt;
      &lt;/order_line&gt;
    &lt;/order_lines&gt;
    &lt;notes/&gt;
    &lt;status&gt;in progress&lt;/status&gt;
    &lt;/source&gt;
  &lt;/order&gt;
  &lt;order&gt;
  &lt;triples&gt;
    &lt;sem:triple xmlns:sem="http://marklogic.com/semantics"&gt;
      &lt;sem:subject&gt;http://www.marklogic.com/orders#Customer2&lt;/sem:subject&gt;
      &lt;sem:predicate&gt;http://www.marklogic.com/orders#placed&lt;/sem:predicate&gt;
      &lt;sem:object&gt;http://www.marklogic.com/orders#Order2&lt;/sem:object&gt;
    &lt;/sem:triple&gt;
      &lt;sem:triple xmlns:sem="http://marklogic.com/semantics"&gt;
      &lt;sem:subject&gt;http://www.marklogic.com/orders#Order2&lt;/sem:subject&gt;
      &lt;sem:predicate&gt;http://www.marklogic.com/orders#contains&lt;/sem:predicate&gt;
      &lt;sem:object&gt;http://www.marklogic.com/orders#Product1&lt;/sem:object&gt;
    &lt;/sem:triple&gt;
    &lt;sem:triple xmlns:sem="http://marklogic.com/semantics"&gt;
      &lt;sem:subject&gt;http://www.marklogic.com/orders#Order2&lt;/sem:subject&gt;
      &lt;sem:predicate&gt;http://www.marklogic.com/orders#contains&lt;/sem:predicate&gt;
      &lt;sem:object&gt;http://www.marklogic.com/orders#Product5&lt;/sem:object&gt;
    &lt;/sem:triple&gt;
   &lt;/triples&gt;
   &lt;source&gt;
    &lt;id&gt;2&lt;/id&gt;
    &lt;order_date&gt;2016-11-11&lt;/order_date&gt;
    &lt;ship_date&gt;2016-11-16 00:54:48 UTC&lt;/ship_date&gt;
    &lt;customer_id&gt;2&lt;/customer_id&gt;
    &lt;payment_terms&gt;net30&lt;/payment_terms&gt;
    &lt;order_lines&gt;
      &lt;order_line&gt;
        &lt;product&gt;1&lt;/product&gt;
        &lt;quantity&gt;38&lt;/quantity&gt;
        &lt;unit_price&gt;9.52&lt;/unit_price&gt;
        &lt;discount&gt;0.76&lt;/discount&gt;
        &lt;total&gt;274.94&lt;/total&gt;
        &lt;notes&gt;Nulla tempus. Vivamus in felis eu sapien cursus vestibulum. Proin eu mi. Nulla ac enim. In tempor, turpis nec euismod scelerisque, quam turpis adipiscing lorem, vitae mattis nibh ligula nec sem. Duis aliquam convallis nunc. Proin at turpis a pede posuere nonummy. Integer non velit. Donec diam neque, vestibulum eget, vulputate ut, ultrices vel, augue.&lt;/notes&gt;
      &lt;/order_line&gt;
      &lt;order_line&gt;
        &lt;product&gt;5&lt;/product&gt;
        &lt;quantity&gt;41&lt;/quantity&gt;
        &lt;unit_price&gt;91.9&lt;/unit_price&gt;
        &lt;discount&gt;0.15&lt;/discount&gt;
        &lt;total&gt;565.19&lt;/total&gt;
        &lt;notes&gt;Vivamus in felis eu sapien cursus vestibulum. Proin eu mi. Nulla ac enim. In tempor, turpis nec euismod scelerisque, quam turpis adipiscing lorem, vitae mattis nibh ligula nec sem. Duis aliquam convallis nunc. Proin at turpis a pede posuere nonummy. Integer non velit.&lt;/notes&gt;
      &lt;/order_line&gt;
    &lt;/order_lines&gt;
    &lt;notes/&gt;
    &lt;status&gt;new&lt;/status&gt;
    &lt;/source&gt;
  &lt;/order&gt;
  &lt;order&gt;
  &lt;triples&gt;
    &lt;sem:triple xmlns:sem="http://marklogic.com/semantics"&gt;
      &lt;sem:subject&gt;http://www.marklogic.com/orders#Customer3&lt;/sem:subject&gt;
      &lt;sem:predicate&gt;http://www.marklogic.com/orders#placed&lt;/sem:predicate&gt;
      &lt;sem:object&gt;http://www.marklogic.com/orders#Order3&lt;/sem:object&gt;
    &lt;/sem:triple&gt;
    &lt;sem:triple xmlns:sem="http://marklogic.com/semantics"&gt;
      &lt;sem:subject&gt;http://www.marklogic.com/orders#Order3&lt;/sem:subject&gt;
      &lt;sem:predicate&gt;http://www.marklogic.com/orders#contains&lt;/sem:predicate&gt;
      &lt;sem:object&gt;http://www.marklogic.com/orders#Product4&lt;/sem:object&gt;
    &lt;/sem:triple&gt;
    &lt;sem:triple xmlns:sem="http://marklogic.com/semantics"&gt;
      &lt;sem:subject&gt;http://www.marklogic.com/orders#Order3&lt;/sem:subject&gt;
      &lt;sem:predicate&gt;http://www.marklogic.com/orders#contains&lt;/sem:predicate&gt;
      &lt;sem:object&gt;http://www.marklogic.com/orders#Product5&lt;/sem:object&gt;
    &lt;/sem:triple&gt;
    &lt;sem:triple xmlns:sem="http://marklogic.com/semantics"&gt;
      &lt;sem:subject&gt;http://www.marklogic.com/orders#Order3&lt;/sem:subject&gt;
      &lt;sem:predicate&gt;http://www.marklogic.com/orders#contains&lt;/sem:predicate&gt;
      &lt;sem:object&gt;http://www.marklogic.com/orders#Product2&lt;/sem:object&gt;
    &lt;/sem:triple&gt;
   &lt;/triples&gt;
   &lt;source&gt;
    &lt;id&gt;3&lt;/id&gt;
    &lt;order_date&gt;2016-04-04&lt;/order_date&gt;
    &lt;ship_date&gt;2016-04-09 07:04:23 UTC&lt;/ship_date&gt;
    &lt;customer_id&gt;3&lt;/customer_id&gt;
    &lt;payment_terms&gt;PIA&lt;/payment_terms&gt;
    &lt;order_lines&gt;
      &lt;order_line&gt;
        &lt;product&gt;4&lt;/product&gt;
        &lt;quantity&gt;32&lt;/quantity&gt;
        &lt;unit_price&gt;12.22&lt;/unit_price&gt;
        &lt;discount&gt;0.33&lt;/discount&gt;
        &lt;total&gt;129.04&lt;/total&gt;
        &lt;notes&gt;Fusce lacus purus, aliquet at, feugiat non, pretium quis, lectus. Suspendisse potenti. In eleifend quam a odio. In hac habitasse platea dictumst. Maecenas ut massa quis augue luctus tincidunt. Nulla mollis molestie lorem. Quisque ut erat. Curabitur gravida nisi at nibh.&lt;/notes&gt;
      &lt;/order_line&gt;
      &lt;order_line&gt;
        &lt;product&gt;5&lt;/product&gt;
        &lt;quantity&gt;98&lt;/quantity&gt;
        &lt;unit_price&gt;57.53&lt;/unit_price&gt;
        &lt;discount&gt;0.04&lt;/discount&gt;
        &lt;total&gt;225.52&lt;/total&gt;
        &lt;notes/&gt;
      &lt;/order_line&gt;
      &lt;order_line&gt;
        &lt;product&gt;2&lt;/product&gt;
        &lt;quantity&gt;87&lt;/quantity&gt;
        &lt;unit_price&gt;59.81&lt;/unit_price&gt;
        &lt;discount&gt;0.89&lt;/discount&gt;
        &lt;total&gt;4631.09&lt;/total&gt;
        &lt;notes/&gt;
      &lt;/order_line&gt;
    &lt;/order_lines&gt;
    &lt;notes/&gt;
    &lt;status&gt;in progress&lt;/status&gt;
    &lt;/source&gt;
  &lt;/order&gt;
&lt;/dataset&gt;


let $order-docs := $order-doc/order
let $count := fn:count($order-docs)
let $order-doc-reset := 
        for $d at $idx in $order-docs 
        let $uri := fn:concat("/order-",$idx,".xml")
          return xdmp:document-insert($uri, &lt;order&gt;{$d/node()}&lt;/order&gt;, (), ("order", "enveloped","harmonized"))
        
return ($cust-a-reset, $cust-b-reset, $prod-doc-reset),
       "You've just loaded the following into the Documents DB:
        - the enveloped and harmonized system-a and system-b customer records
        - enveloped order documents containing triples
        - product documents "</query><query name="cleanup" focus="false" listorder="13" taborder="15" active="true" database="14942407515111994202" server="6240101570028256752" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml";

let $uris := cts:uris('','document', cts:and-query(()))
for $uri in $uris 
return xdmp:document-delete($uri)</query></workspace></export>
