<?xml version="1.0" encoding="UTF-8"?>
<export><workspace name="3c-modeling-semantics-mlw17"><query active="true" focus="false" mode="xquery" name="1 Model">(: this model extends the second model with some triples.  They are embedded inline as triples XML.
   One can also use constructor functions to create triples, or parse the popular RDF formats. 
   :) 
import module namespace es = "http://marklogic.com/entity-services" at "/MarkLogic/entity-services/entity-services.xqy"; 

let $model :=
&lt;es:model&gt;
  &lt;es:info&gt;
    &lt;es:title&gt;ECommerce&lt;/es:title&gt;
    &lt;es:version&gt;0.0.3&lt;/es:version&gt;
    &lt;es:description&gt;A model to describe the Customers, Products, and Orders in "Our Business."  This version of the model incorporates some semantic extensions that enable
    querying instance data through the lens of a publicly-available ontology.&lt;/es:description&gt;
    &lt;es:base-uri&gt;http://marklogic.com/example/ontology/&lt;/es:base-uri&gt;
  &lt;/es:info&gt;
  &lt;es:definitions&gt;
    &lt;Customer&gt;
      &lt;es:properties&gt;
        &lt;id&gt;&lt;es:datatype&gt;int&lt;/es:datatype&gt;&lt;es:description&gt;An integer to uniquely identify customers.&lt;/es:description&gt;&lt;/id&gt;
        &lt;firstName&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;es:description&gt;The given name of the customer.&lt;/es:description&gt;&lt;/firstName&gt;
        &lt;lastName&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;es:description&gt;The surname of the customer.&lt;/es:description&gt;&lt;/lastName&gt;
        &lt;email&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;es:description&gt;The customer's email address, used for contacting&lt;/es:description&gt;&lt;/email&gt;
        &lt;ssn&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;es:description&gt;The customer's social security number (PII!)&lt;/es:description&gt;&lt;/ssn&gt;
        &lt;phone&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;es:description&gt;The customer's phone number.&lt;/es:description&gt;&lt;/phone&gt;
        &lt;billTo&gt;&lt;es:ref&gt;#/definitions/Address&lt;/es:ref&gt;&lt;es:description&gt;Customers address for getting billing information.&lt;/es:description&gt;&lt;/billTo&gt;
        &lt;shipTo&gt;&lt;es:ref&gt;#/definitions/Address&lt;/es:ref&gt;&lt;es:description&gt;Customer's physical address for receiving our products.&lt;/es:description&gt;&lt;/shipTo&gt;
        &lt;segment&gt;&lt;es:ref&gt;#/definitions/Segment&lt;/es:ref&gt;&lt;es:description&gt;A customer segment, for marketing differentiation.&lt;/es:description&gt;&lt;/segment&gt;
        &lt;region&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;es:description&gt;Region of the country that the customer lives in, for marketing and support communication.&lt;/es:description&gt;&lt;/region&gt;
      &lt;/es:properties&gt;
      &lt;es:primary-key&gt;id&lt;/es:primary-key&gt;
      &lt;sem:triples&gt;
        &lt;sem:triple&gt;
            &lt;sem:subject&gt;http://marklogic.com/example/ontology/ECommerce-0.0.3/Customer/segment&lt;/sem:subject&gt;
            &lt;sem:predicate&gt;http://www.w3.org/2002/07/owl#inverseOf&lt;/sem:predicate&gt;
            &lt;sem:object&gt;http://xmlns.com/foaf/0.1/member&lt;/sem:object&gt;
          &lt;/sem:triple&gt;
          &lt;sem:triple&gt;
            &lt;sem:subject&gt;http://marklogic.com/example/ontology/ECommerce-0.0.3/Customer/lastName&lt;/sem:subject&gt;
            &lt;sem:predicate&gt;http://www.w3.org/2000/01/rdf-schema#subPropertyOf&lt;/sem:predicate&gt;
            &lt;sem:object&gt;http://xmlns.com/foaf/0.1/familyName&lt;/sem:object&gt;
          &lt;/sem:triple&gt;
          &lt;sem:triple&gt;
            &lt;sem:subject&gt;http://marklogic.com/example/ontology/ECommerce-0.0.3/Customer/firstName&lt;/sem:subject&gt;
            &lt;sem:predicate&gt;http://www.w3.org/2000/01/rdf-schema#subPropertyOf&lt;/sem:predicate&gt;
            &lt;sem:object&gt;http://xmlns.com/foaf/0.1/givenName&lt;/sem:object&gt;
          &lt;/sem:triple&gt;
        &lt;/sem:triples&gt;
    &lt;/Customer&gt;
    &lt;Segment&gt;
      &lt;es:description&gt;A group of customers, used to categorize them into groups for marketing activity&lt;/es:description&gt;
      &lt;es:properties&gt;
        &lt;code&gt;
          &lt;es:datatype&gt;string&lt;/es:datatype&gt;
          &lt;es:description&gt;A three-character code referring to a segment of customers&lt;/es:description&gt;
        &lt;/code&gt;
        &lt;label&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;/label&gt;
      &lt;/es:properties&gt;
      &lt;sem:triples&gt;
        &lt;sem:triple&gt;
          &lt;sem:subject&gt;http://marklogic.com/example/ontology/ECommerce-0.0.3/Segment&lt;/sem:subject&gt;
          &lt;sem:predicate&gt;http://www.w3.org/2000/01/rdf-schema#subClassOf&lt;/sem:predicate&gt;
          &lt;sem:object&gt;http://xmlns.com/foaf/0.1/Group&lt;/sem:object&gt;
        &lt;/sem:triple&gt;
        &lt;sem:triple&gt;
          &lt;sem:subject&gt;http://marklogic.com/example/ontology/ECommerce-0.0.3/Segment/label&lt;/sem:subject&gt;
          &lt;sem:predicate&gt;http://www.w3.org/2000/01/rdf-schema#subPropertyOf&lt;/sem:predicate&gt;
          &lt;sem:object&gt;http://www.w3.org/2000/01/rdf-schema#label&lt;/sem:object&gt;
        &lt;/sem:triple&gt;
      &lt;/sem:triples&gt;
      &lt;es:primary-key&gt;code&lt;/es:primary-key&gt;
    &lt;/Segment&gt;
    &lt;Address&gt;
      &lt;es:properties&gt;
         &lt;hash&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;/hash&gt;
         &lt;street&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;/street&gt;
         &lt;city&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;/city&gt;
         &lt;state&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;/state&gt;
         &lt;zip&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;/zip&gt;
         &lt;latitude&gt;&lt;es:datatype&gt;decimal&lt;/es:datatype&gt;&lt;/latitude&gt;
         &lt;longitude&gt;&lt;es:datatype&gt;decimal&lt;/es:datatype&gt;&lt;/longitude&gt;
      &lt;/es:properties&gt;
      &lt;es:primary-key&gt;hash&lt;/es:primary-key&gt;
    &lt;/Address&gt;
    &lt;Order&gt;
      &lt;es:properties&gt;
        &lt;id&gt;&lt;es:datatype&gt;int&lt;/es:datatype&gt;&lt;/id&gt;
        &lt;orderDate&gt;&lt;es:datatype&gt;date&lt;/es:datatype&gt;&lt;/orderDate&gt;
        &lt;shipDate&gt;&lt;es:datatype&gt;dateTime&lt;/es:datatype&gt;&lt;/shipDate&gt;
        &lt;customer&gt;&lt;es:ref&gt;#/definitions/Customer&lt;/es:ref&gt;&lt;/customer&gt;
        &lt;paymentTerms&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;es:description&gt;Terms of payment.  Really an enum, may be 'COD' or...&lt;/es:description&gt;&lt;/paymentTerms&gt;   &lt;!-- really an enum --&gt;
        &lt;orderLines&gt;&lt;es:datatype&gt;array&lt;/es:datatype&gt;&lt;es:items&gt;&lt;es:ref&gt;#/definitions/OrderLine&lt;/es:ref&gt;&lt;/es:items&gt;&lt;/orderLines&gt;
      &lt;/es:properties&gt;
      &lt;es:primary-key&gt;id&lt;/es:primary-key&gt;
      &lt;es:range-index&gt;orderDate&lt;/es:range-index&gt;
      &lt;es:range-index&gt;shipDate&lt;/es:range-index&gt;
      &lt;es:range-index&gt;paymentTerms&lt;/es:range-index&gt;
      &lt;es:required&gt;customer&lt;/es:required&gt;
    &lt;/Order&gt;
    &lt;OrderLine&gt;
      &lt;es:properties&gt;
        &lt;product&gt;&lt;es:ref&gt;#/definitions/Product&lt;/es:ref&gt;&lt;/product&gt;
        &lt;quantity&gt;&lt;es:datatype&gt;int&lt;/es:datatype&gt;&lt;/quantity&gt;
        &lt;unitPrice&gt;&lt;es:datatype&gt;decimal&lt;/es:datatype&gt;&lt;/unitPrice&gt;
        &lt;discount&gt;&lt;es:datatype&gt;float&lt;/es:datatype&gt;&lt;/discount&gt;
        &lt;total&gt;&lt;es:datatype&gt;decimal&lt;/es:datatype&gt;&lt;/total&gt;
        &lt;notes&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;/notes&gt;
      &lt;/es:properties&gt;
      &lt;es:word-lexicon&gt;notes&lt;/es:word-lexicon&gt;
    &lt;/OrderLine&gt;
    &lt;Product&gt;
      &lt;es:properties&gt;
        &lt;name&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;/name&gt;
        &lt;sku&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;/sku&gt;
        &lt;category&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;!-- enum --&gt;&lt;/category&gt;
        &lt;relatedProduct&gt;&lt;es:datatype&gt;array&lt;/es:datatype&gt;&lt;es:items&gt;&lt;es:ref&gt;#/definitions/ProductRelation&lt;/es:ref&gt;&lt;/es:items&gt;&lt;/relatedProduct&gt;
      &lt;/es:properties&gt;
      &lt;es:primary-key&gt;sku&lt;/es:primary-key&gt;
      &lt;es:range-index&gt;name&lt;/es:range-index&gt; 
    &lt;/Product&gt;
    &lt;ProductRelation&gt;
      &lt;es:properties&gt;
        &lt;product&gt;&lt;es:ref&gt;#/definitions/Product&lt;/es:ref&gt;&lt;/product&gt;
        &lt;relationship&gt;&lt;es:datatype&gt;string&lt;/es:datatype&gt;&lt;/relationship&gt;
      &lt;/es:properties&gt;
    &lt;/ProductRelation&gt;
  &lt;/es:definitions&gt;
&lt;/es:model&gt;
return (xdmp:document-insert("/semantic-model.xml", $model, xdmp:default-permissions(), "http://marklogic.com/entity-services/models"),
"You have now inserted the XML model in this tab info the database.  Here we validate it and show its JSON representation and its triples:",
es:model-validate($model),
cts:triples((), (), (), (), (), cts:document-query("/semantic-model.xml")))</query><query active="true" focus="false" mode="xquery" name="0 Intro">"
The goal in this workspace to use a particular technique called
semantic inference on a model in order to apply a lens to it.

The lens is a model that I've found in the public domain, which
has some traction for describing people, organizations, and graphs
among them.  It's known as "friend of a friend", or foaf.

"</query><query active="true" focus="false" mode="xquery" name="2 instance-converter">(: This instance converter module accomodates the new Segment entity type :)
import module namespace es = "http://marklogic.com/entity-services" at "/MarkLogic/entity-services/entity-services.xqy"; 

let $edited-module := text { "
(: This buffer was created by running
   xdmp:save('/share/instance.xqy', doc('/semantic-model.xml')=&gt;es:model-from-xml()=&gt;es:instance-converter-generate() )
   and then editing the results :)

xquery version '1.0-ml';


module namespace eCommerce
    = 'http://marklogic.com/example/ontology/ECommerce-0.0.3';

import module namespace es = 'http://marklogic.com/entity-services'
    at '/MarkLogic/entity-services/entity-services.xqy';

declare option xdmp:mapping 'false';


declare function eCommerce:extract-instance-Customer(
    $source as node()?
) as map:map
{
    let $source-node := eCommerce:init-source($source, 'Customer')

    let $instance := json:object()
        =&gt;eCommerce:add-attachments($source-node, $source)
        =&gt;map:with('$type', 'Customer')
    return
    if (empty($source-node/*))
    then $instance=&gt;map:with('$ref', $source-node/text())
    else
    $instance
    =&gt;   map:with('id',                     xs:int($source-node/customer_id))
    =&gt;es:optional('firstName',              xs:string($source-node/first_name))
    =&gt;es:optional('lastName',               xs:string($source-node/last_name))
    =&gt;es:optional('email',                  xs:string($source-node/email))
    =&gt;es:optional('ssn',                    xs:string($source-node/ssn))
    =&gt;es:optional('phone',                  xs:string($source-node/phone))
    =&gt;es:optional('billTo',                 eCommerce:extract-instance-Address($source-node/billing_address))
    =&gt;es:optional('shipTo',                 eCommerce:extract-instance-Address($source-node/shipping_address))
    =&gt;es:optional('segment',                eCommerce:extract-instance-Segment($source-node/segment))
    =&gt;es:optional('region',                 xs:string($source-node/region))
};


(:~
 : Creates a map:map instance from some source document.
 : @param $source-node  A document or node that contains
 :   data for populating a Segment
 : @return A map:map instance with extracted data and
 :   metadata about the instance.
 :)
declare function eCommerce:extract-instance-Segment(
    $source as node()?
) as map:map
{
    let $source-node := eCommerce:init-source($source, 'Segment')

    let $instance := json:object()
        =&gt;map:with('$type', 'Segment')

    return
    if (empty($source-node/*))
    then $instance=&gt;map:with('$ref', $source-node/text())
    else
    $instance
    =&gt;   map:with('code',                   xs:string($source-node/code))
    =&gt;es:optional('label',                  xs:string($source-node/label))
};

declare function eCommerce:extract-instance-Address(
    $source as node()?
) as map:map
{
    let $source-node := eCommerce:init-source($source, 'Address')

    let $instance := json:object()
        =&gt;map:with('$type', 'Address')
    return

    if (empty($source-node/*))
         then $instance=&gt;map:with('$ref', $source-node/text())
     else
     $instance
     =&gt;map:with   ('hash',                   xdmp:random())
     =&gt;es:optional('street',                 xs:string($source-node/street))
     =&gt;es:optional('city',                   xs:string($source-node/city))
     =&gt;es:optional('state',                  xs:string($source-node/state))
     =&gt;es:optional('zip',                    xs:string($source-node/zip))
     =&gt;es:optional('latitude',               xs:decimal($source-node/latitude))
     =&gt;es:optional('longitude',              xs:decimal($source-node/longitude))
 };


 declare function eCommerce:extract-instance-Order(
     $source as node()?
 ) as map:map
 {
     let $source-node := eCommerce:init-source($source, 'Order')

     let $instance := json:object()
         =&gt;eCommerce:add-attachments($source-node, $source)
         =&gt;map:with('$type', 'Order')
     return
     if (empty($source-node/*))
     then $instance=&gt;map:with('$ref', $source-node/text())
     else
     $instance
     =&gt;   map:with('id',                     xs:int($source-node/id))
     =&gt;es:optional('orderDate',             xs:date($source-node/order_date))
     =&gt;es:optional('shipDate',              xdmp:parse-dateTime('[Y]-[M]-[D] [H]:[m]:[s]', $source-node/ship_date))
     (: The following property is a local reference.  :)
     =&gt;   map:with('customer',               eCommerce:extract-instance-Customer($source-node/customer_id))
     =&gt;es:optional('paymentTerms',           xs:string($source-node/payment_terms))
     (: The following property is a local reference.  :)
     =&gt;es:optional('orderLines',             es:extract-array($source-node/order_lines/order_line, eCommerce:extract-instance-OrderLine#1))
 };

 declare function eCommerce:extract-instance-OrderLine(
     $source as node()?
 ) as map:map
 {
     let $source-node := eCommerce:init-source($source, 'OrderLine')

     let $instance := json:object()
         =&gt;eCommerce:add-attachments($source-node, $source)
         =&gt;map:with('$type', 'OrderLine')
     return
     if (empty($source-node/*))
     then $instance=&gt;map:with('$ref', $source-node/text())
     else
     $instance
          (: The following property is a local reference.  :)
     =&gt;es:optional('product',                eCommerce:extract-instance-Product($source-node/product))
     =&gt;es:optional('quantity',               xs:int($source-node/quantity))
     =&gt;es:optional('unitPrice',              xs:decimal($source-node/unitPrice))
     =&gt;es:optional('discount',               xs:float($source-node/discount))
     =&gt;es:optional('total',                  xs:decimal($source-node/total))
     =&gt;es:optional('notes',                  xs:string($source-node/notes))
 };

 declare function eCommerce:extract-instance-Product(
     $source as node()?
 ) as map:map
 {
     let $source-node := eCommerce:init-source($source, 'Product')

     let $instance := json:object()
         =&gt;eCommerce:add-attachments($source-node, $source)
         =&gt;map:with('$type', 'Product')

     return
     if (empty($source-node/*))
     then $instance=&gt;map:with('$ref', $source-node/text())
     else
     $instance
     =&gt;es:optional('name',                   xs:string($source-node/name))
     =&gt;   map:with('sku',                    xs:string($source-node/sku))
     =&gt;es:optional('category',               xs:string($source-node/category))
     (: The following property is a local reference.  :)
     =&gt;es:optional('relatedProduct',         es:extract-array($source-node/related_products/related_product, eCommerce:extract-instance-ProductRelation#1))
 };

 declare function eCommerce:extract-instance-ProductRelation(
     $source as node()?
 ) as map:map
 {
     let $source-node := eCommerce:init-source($source, 'ProductRelation')

     let $instance := json:object()
         =&gt;eCommerce:add-attachments($source-node, $source)
         =&gt;map:with('$type', 'ProductRelation')

     return

     if (empty($source-node/*))
     then $instance=&gt;map:with('$ref', $source-node/text())
     else

     $instance
     (: The following property is a local reference.  :)
     =&gt;es:optional('product',                eCommerce:extract-instance-Product($source-node/product_name))
     =&gt;es:optional('relationship',           xs:string($source-node/relationship))
     };





(:~
 : Turns an entity instance into an XML structure.
 : This out-of-the box implementation traverses a map structure
 : and turns it deterministically into an XML tree.
 : Using this function as-is should be sufficient for most use
 : cases, and will play well with other generated artifacts.
 : @param $entity-instance A map:map instance returned from one of the extract-instance
 :    functions.
 : @return An XML element that encodes the instance.
 :)
declare function eCommerce:instance-to-canonical-xml(
    $entity-instance as map:map
) as element()
{
    (: Construct an element that is named the same as the Entity Type :)
    element { map:get($entity-instance, '$type') }  {
        if ( map:contains($entity-instance, '$ref') )
        then map:get($entity-instance, '$ref')
        else
            for $key in map:keys($entity-instance)
            let $instance-property := map:get($entity-instance, $key)
            where ($key castable as xs:NCName)
            return
                typeswitch ($instance-property)
                (: This branch handles embedded objects.  You can choose to prune
                   an entity's representation of extend it with lookups here. :)
                case json:object+
                    return
                        for $prop in $instance-property
                        return element { $key } { eCommerce:instance-to-canonical-xml($prop) }
                (: An array can also treated as multiple elements :)
                case json:array
                    return
                        for $val in json:array-values($instance-property)
                        return
                            if ($val instance of json:object)
                            then element { $key } {
                                attribute datatype { 'array' },
                                eCommerce:instance-to-canonical-xml($val) }
                            else element { $key } {
                                attribute datatype { 'array' },
                                $val }
                (: A sequence of values should be simply treated as multiple elements :)
                case item()+
                    return
                        for $val in $instance-property
                        return element { $key } { $val }
                                        default return element { $key } { $instance-property }
    }
};


(:
 : Wraps a canonical instance (returned by instance-to-canonical-xml())
 : within an envelope patterned document, along with the source
 : document, which is stored in an attachments section.
 : @param $entity-instance an instance, as returned by an extract-instance
 : function
 : @return A document which wraps both the canonical instance and source docs.
 :)
declare function eCommerce:instance-to-envelope(
    $entity-instance as map:map
) as document-node()
{
    document {
        element es:envelope {
            element es:instance {
                element es:info {
                    element es:title { map:get($entity-instance,'$type') },
                    element es:version { '0.0.3' }
                },
                eCommerce:instance-to-canonical-xml($entity-instance)
            },
            element es:attachments {
                map:get($entity-instance, '$attachments')
            }
        }
    }
};


declare private function eCommerce:init-source(
    $source as node()*,
    $entity-type-name as xs:string
) as node()*
{
    if ( ($source instance of document-node())
        or (exists
            ($source/element()[fn:node-name(.) eq xs:QName($entity-type-name)] )))
    then $source/node()
    else $source
};


declare private function eCommerce:add-attachments(
    $instance as json:object,
    $source-node as node()*,
    $source as node()*
) as json:object
{
    $instance
    =&gt;map:with('$attachments',
        typeswitch($source-node)
        case object-node() return xdmp:quote($source)
        case array-node() return xdmp:quote($source)
        default return $source)
};
"
}

return xdmp:invoke-function(function() { 
  xdmp:document-insert("/ext/extractions-0.0.3.xqy", $edited-module) }, 
  map:map()=&gt;map:with("database", xdmp:database("Modules"))
  ),
  
"You have inserted an instance converter module into the modules database.
 It can be used by importing it from transforms or other integration code like this:
 import module namespace my = 'http://marklogic.com/tutorial-data/ECommerce-0.0.3' at '/ext/extractions-0.0.3.xqy';
"</query><query active="true" focus="false" mode="xquery" name="3 harmonize">import module namespace es = "http://marklogic.com/entity-services" at "/MarkLogic/entity-services/entity-services.xqy"; 

import module namespace my = "http://marklogic.com/example/ontology/ECommerce-0.0.3"
  at "/ext/extractions-0.0.3.xqy";
 
for $envelope at $i in 
(
collection("customer") ! my:extract-instance-Customer(.) =&gt;my:instance-to-envelope(),
collection("order")    ! my:extract-instance-Order(.)    =&gt;my:instance-to-envelope(),
collection("product")  ! my:extract-instance-Product(.)  =&gt;my:instance-to-envelope()
)
return
xdmp:document-insert("/envelope-" || $i || ".xml", $envelope, xdmp:default-permissions(), "envelopes");
"You have just run extraction code to create envelopes from the upstream source documents like this:",
(/*:envelope[*:instance[*:info/*:version="0.0.3"]/Product])[1]
;

import module namespace es = "http://marklogic.com/entity-services" at "/MarkLogic/entity-services/entity-services.xqy"; 

let $segments := 
&lt;Segments&gt;
&lt;es:instance&gt;
  &lt;es:info&gt;
    &lt;es:title&gt;Segment&lt;/es:title&gt;
    &lt;es:version&gt;0.0.3&lt;/es:version&gt;
  &lt;/es:info&gt;
  { for $d in distinct-values(collection("envelopes")//segment/text()) 
    return 
     &lt;Segment&gt;
       &lt;code&gt;{$d}&lt;/code&gt;
       &lt;label&gt;The segment of customers with short code {$d}&lt;/label&gt;
     &lt;/Segment&gt; }
&lt;/es:instance&gt;
&lt;/Segments&gt;
return (
xdmp:document-insert("/segments.xml", $segments, xdmp:default-permissions(), "reference"),
"You've inserted this reference data for customer segments:",
$segments)</query><query active="true" focus="false" mode="xquery" name="7 Query the Inferred Model">(:
 : This SPARQL query uses inference rules to query the business ontology, rather than 
 : the entity services model directly.
 : The entity services model, supplemented with triples that tie it to RDFS modeling,
 : creates relationships based on the foaf vocabulary
 :)
sem:sparql('
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX foaf: &lt;http://xmlns.com/foaf/0.1/&gt;
PREFIX dc: &lt;http://purl.org/dc/elements/1.1/&gt;
PREFIX sw: &lt;http://www.w3.org/2003/06/sw-vocab-status/ns#&gt;

SELECT
?segment ?firstName ?lastName ?p ?o
WHERE
{
?s a ?group ;
   rdfs:label ?segment ;
   foaf:member ?person .
   ?person foaf:givenName ?firstName ;
           foaf:familyName ?lastName.
# ?group ?p ?o
FILTER (?group = foaf:Group)
}',
(),
(),
sem:ruleset-store( ("inverseOf.rules", "subClassOf.rules", "subPropertyOf.rules"), sem:store()))</query><query active="true" focus="false" mode="xquery" name="5 Load FOAF Ontology">import module namespace sem = "http://marklogic.com/semantics" at "/MarkLogic/semantics.xqy"; 
let $foaf-ontology := 
(: This is the FOAF formal vocabulary description, expressed using W3C RDFS and OWL markup. 
  For more information about FOAF:                                            
  see the FOAF project homepage, http://www.foaf-project.org/               
  FOAF specification, http://xmlns.com/foaf/spec/                                                                                               --&gt;
  first we introduce a number of RDF namespaces we will be using... 
  :)
&lt;rdf:RDF 
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
	xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" 
	xmlns:owl="http://www.w3.org/2002/07/owl#" 
	xmlns:vs="http://www.w3.org/2003/06/sw-vocab-status/ns#" 
	xmlns:foaf="http://xmlns.com/foaf/0.1/" 
	xmlns:wot="http://xmlns.com/wot/0.1/" 
	xmlns:dc="http://purl.org/dc/elements/1.1/"&gt;
&lt;!-- Here we describe general characteristics of the FOAF vocabulary ('ontology'). --&gt;
  &lt;owl:Ontology rdf:about="http://xmlns.com/foaf/0.1/" dc:title="Friend of a Friend (FOAF) vocabulary" dc:description="The Friend of a Friend (FOAF) RDF vocabulary, described using W3C RDF Schema and the Web Ontology Language." &gt;
  &lt;/owl:Ontology&gt;


  &lt;!-- OWL/RDF interop section - geeks only --&gt;
  &lt;!--  most folk can ignore this lot. the game here is to make FOAF
  	work with vanilla RDF/RDFS tools, and with the stricter OWL DL 
	profile of OWL. At the moment we're in the OWL Full flavour of OWL. 
	The following are tricks to try have the spec live in both worlds
	at once. See
		http://phoebus.cs.man.ac.uk:9999/OWL/Validator
		http://www.mindswap.org/2003/pellet/demo.shtml
	...for some tools that help. 					--&gt;
  &lt;owl:AnnotationProperty rdf:about="http://xmlns.com/wot/0.1/assurance"/&gt;
  &lt;owl:AnnotationProperty rdf:about="http://xmlns.com/wot/0.1/src_assurance"/&gt;
  &lt;owl:AnnotationProperty rdf:about="http://www.w3.org/2003/06/sw-vocab-status/ns#term_status"/&gt;
  &lt;!--  DC terms are NOT annotation properties in general, so we consider the following 
	claims scoped to this document. They may be removed in future revisions if
	OWL tools become more flexible. --&gt;
  &lt;owl:AnnotationProperty rdf:about="http://purl.org/dc/elements/1.1/description"/&gt;
  &lt;owl:AnnotationProperty rdf:about="http://purl.org/dc/elements/1.1/title"/&gt;
  &lt;owl:AnnotationProperty rdf:about="http://purl.org/dc/elements/1.1/date"/&gt;
  &lt;owl:Class rdf:about="http://www.w3.org/2000/01/rdf-schema#Class"/&gt;

&lt;!--  &lt;owl:Class rdf:about="http://www.w3.org/2000/01/rdf-schema#Resource"/&gt;
  &lt;owl:Class rdf:about="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt; --&gt;
  &lt;!-- end of OWL/RDF interop voodoo. mostly. --&gt;

  &lt;!-- utility class, a candidate for replacing the pattern of subproperty-ing rdfs:label --&gt;
  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/LabelProperty" vs:term_status="unstable"&gt;
    &lt;rdfs:label&gt;Label Property&lt;/rdfs:label&gt;
    &lt;rdfs:comment&gt;A foaf:LabelProperty is any RDF property with texual values that serve as labels.&lt;/rdfs:comment&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdfs:Class&gt;

&lt;!-- FOAF classes (types) are listed first. --&gt;

  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/Person" rdfs:label="Person" rdfs:comment="A person." vs:term_status="stable"&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class" /&gt;
    &lt;owl:equivalentClass rdf:resource="http://schema.org/Person" /&gt;
    &lt;owl:equivalentClass rdf:resource="http://www.w3.org/2000/10/swap/pim/contact#Person" /&gt;
&lt;!--    &lt;rdfs:subClassOf&gt;&lt;owl:Class rdf:about="http://xmlns.com/wordnet/1.6/Person"/&gt;&lt;/rdfs:subClassOf&gt; --&gt;
    &lt;rdfs:subClassOf&gt;&lt;owl:Class rdf:about="http://xmlns.com/foaf/0.1/Agent"/&gt;&lt;/rdfs:subClassOf&gt;
&lt;!--    &lt;rdfs:subClassOf&gt;&lt;owl:Class rdf:about="http://xmlns.com/wordnet/1.6/Agent"/&gt;&lt;/rdfs:subClassOf&gt; --&gt;
    &lt;rdfs:subClassOf&gt;&lt;owl:Class rdf:about="http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing" rdfs:label="Spatial Thing"/&gt;&lt;/rdfs:subClassOf&gt;
    &lt;!-- aside: 
	are spatial things always spatially located? 
	Person includes imaginary people... discuss... --&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;

&lt;!--    &lt;owl:disjointWith rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt; this was a mistake; tattoo'd people, for example. --&gt;

    &lt;owl:disjointWith rdf:resource="http://xmlns.com/foaf/0.1/Organization"/&gt;
    &lt;owl:disjointWith rdf:resource="http://xmlns.com/foaf/0.1/Project"/&gt;
  &lt;/rdfs:Class&gt;
  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/Document" rdfs:label="Document" rdfs:comment="A document." vs:term_status="stable"&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt;
    &lt;owl:equivalentClass rdf:resource="http://schema.org/CreativeWork" /&gt;
&lt;!--    &lt;rdfs:subClassOf rdf:resource="http://xmlns.com/wordnet/1.6/Document"/&gt; --&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;owl:disjointWith rdf:resource="http://xmlns.com/foaf/0.1/Organization"/&gt;
    &lt;owl:disjointWith rdf:resource="http://xmlns.com/foaf/0.1/Project"/&gt;
  &lt;/rdfs:Class&gt;
  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/Organization" rdfs:label="Organization" rdfs:comment="An organization." vs:term_status="stable"&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt;
&lt;!--    &lt;rdfs:subClassOf&gt;&lt;owl:Class rdf:about="http://xmlns.com/wordnet/1.6/Organization"/&gt;&lt;/rdfs:subClassOf&gt; --&gt;
    &lt;rdfs:subClassOf rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;owl:disjointWith rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;owl:disjointWith rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
  &lt;/rdfs:Class&gt;
  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/Group" vs:term_status="stable" rdfs:label="Group" rdfs:comment="A class of Agents."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt;
    &lt;rdfs:subClassOf rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
  &lt;/rdfs:Class&gt;
  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/Agent" vs:term_status="stable" rdfs:label="Agent" rdfs:comment="An agent (eg. person, group, software or physical artifact)."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt;
    &lt;owl:equivalentClass rdf:resource="http://purl.org/dc/terms/Agent"/&gt;
&lt;!--    &lt;rdfs:subClassOf&gt;&lt;owl:Class rdf:about="http://xmlns.com/wordnet/1.6/Agent-3"/&gt;&lt;/rdfs:subClassOf&gt; --&gt;
  &lt;/rdfs:Class&gt;
  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/Project" vs:term_status="testing" rdfs:label="Project" rdfs:comment="A project (a collective endeavour of some kind)."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt;
&lt;!--    &lt;rdfs:subClassOf&gt;&lt;owl:Class rdf:about="http://xmlns.com/wordnet/1.6/Project"/&gt;&lt;/rdfs:subClassOf&gt; --&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;owl:disjointWith rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;owl:disjointWith rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
&lt;!-- arguably a subclass of Agent; to be discussed --&gt;
  &lt;/rdfs:Class&gt;
  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/Image" vs:term_status="stable" rdfs:label="Image" rdfs:comment="An image."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt;
    &lt;owl:equivalentClass rdf:resource="http://schema.org/ImageObject" /&gt;
&lt;!--    &lt;rdfs:subClassOf&gt;&lt;owl:Class rdf:about="http://xmlns.com/wordnet/1.6/Document"/&gt;&lt;/rdfs:subClassOf&gt; --&gt;
    &lt;rdfs:subClassOf&gt;&lt;owl:Class rdf:about="http://xmlns.com/foaf/0.1/Document"/&gt;&lt;/rdfs:subClassOf&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdfs:Class&gt;

  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/PersonalProfileDocument" rdfs:label="PersonalProfileDocument" rdfs:comment="A personal profile RDF document." vs:term_status="testing"&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt;
    &lt;rdfs:subClassOf rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
  &lt;/rdfs:Class&gt;
	
  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/OnlineAccount" vs:term_status="testing" rdfs:label="Online Account" rdfs:comment="An online account."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing" rdfs:label="Thing"/&gt;
  &lt;/rdfs:Class&gt;
  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/OnlineGamingAccount" vs:term_status="unstable" rdfs:label="Online Gaming Account" rdfs:comment="An online gaming account."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt;
    &lt;rdfs:subClassOf rdf:resource="http://xmlns.com/foaf/0.1/OnlineAccount"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdfs:Class&gt;
  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/OnlineEcommerceAccount" vs:term_status="unstable" rdfs:label="Online E-commerce Account" rdfs:comment="An online e-commerce account."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt;
    &lt;rdfs:subClassOf rdf:resource="http://xmlns.com/foaf/0.1/OnlineAccount"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdfs:Class&gt;
  &lt;rdfs:Class rdf:about="http://xmlns.com/foaf/0.1/OnlineChatAccount" vs:term_status="unstable" rdfs:label="Online Chat Account" rdfs:comment="An online chat account."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt;
    &lt;rdfs:subClassOf rdf:resource="http://xmlns.com/foaf/0.1/OnlineAccount"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdfs:Class&gt;
&lt;!-- FOAF properties (ie. relationships). --&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/mbox" vs:term_status="stable" rdfs:label="personal mailbox" rdfs:comment="A 
personal mailbox, ie. an Internet mailbox associated with exactly one owner, the first owner of this mailbox. This is a 'static inverse functional property', in that  there is (across time and change) at most one individual that ever has any particular value for foaf:mbox."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/mbox_sha1sum" vs:term_status="testing" rdfs:label="sha1sum of a personal mailbox URI name" rdfs:comment="The sha1sum of the URI of an Internet mailbox associated with exactly one owner, the  first owner of the mailbox."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/&gt;

&lt;!--
put it back in again 2006-01-29 - see 
http://chatlogs.planetrdf.com/swig/2006-01-29.html#T21-12-35
I have mailed rdfweb-dev@vapours.rdfweb.org for discussion.
Libby

Commenting out as a kindness to OWL DL users. The semantics didn't quite cover
our usage anyway, since (a) we want static-across-time, which is so beyond OWL as 
to be from another planet (b) we want identity reasoning invariant across xml:lang 
tagging. FOAF code will know what to do. OWL folks note, this assertion might return. 

danbri
--&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/gender" vs:term_status="testing" 
rdfs:label="gender" 
rdfs:comment="The gender of this Agent (typically but not necessarily 'male' or 'female')."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;!-- whatever one's gender is, and we are liberal in leaving room for more options 
    than 'male' and 'female', we model this so that an agent has only one gender. --&gt;
  &lt;/rdf:Property&gt;



  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/geekcode" vs:term_status="archaic" rdfs:label="geekcode" rdfs:comment="A textual geekcode for this person, see http://www.geekcode.com/geek.html"&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/dnaChecksum" vs:term_status="archaic" rdfs:label="DNA checksum" rdfs:comment="A checksum for the DNA of some thing. Joke."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/sha1" vs:term_status="unstable" rdfs:label="sha1sum (hex)" rdfs:comment="A sha1sum hash, in hex."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
&lt;!-- rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty" --&gt;
&lt;!-- IFP under discussion --&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/based_near" vs:term_status="testing" rdfs:label="based near" rdfs:comment="A location that something is based near, for some broadly human notion of near."&gt;
&lt;!-- see http://esw.w3.org/topic/GeoOnion for extension  ideas --&gt;
&lt;!-- this was ranged as Agent... hmm --&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
&lt;!-- FOAF naming properties --&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/title" vs:term_status="testing" rdfs:label="title" rdfs:comment="Title (Mr, Mrs, Ms, Dr. etc)"&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/nick" vs:term_status="testing" rdfs:label="nickname" rdfs:comment="A short informal nickname characterising an agent (includes login identifiers, IRC and other chat nicknames)."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
&lt;!-- ......................... chat IDs ........................... --&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/jabberID" vs:term_status="testing" rdfs:label="jabber ID" rdfs:comment="A jabber ID for something."&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
&lt;!--
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/nick"/&gt;
...different to the other IM IDs, as Jabber has wider usage, so 
we don't want the implied rdfs:domain here.

--&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;!-- there is a case for using resources/URIs here, ... --&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/aimChatID" vs:term_status="testing" rdfs:label="AIM chat ID" rdfs:comment="An AIM chat ID"&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/nick"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/skypeID" vs:term_status="testing" rdfs:label="Skype ID" rdfs:comment="A Skype ID"&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/nick"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;!-- todo: OWL2 easy key definition --&gt;
  &lt;/rdf:Property&gt;

&lt;!-- http://www.stud.uni-karlsruhe.de/~uck4/ICQ/Packet-112.html --&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/icqChatID" vs:term_status="testing" rdfs:label="ICQ chat ID" rdfs:comment="An ICQ chat ID"&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/nick"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/yahooChatID" vs:term_status="testing" rdfs:label="Yahoo chat ID" rdfs:comment="A Yahoo chat ID"&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/nick"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/msnChatID" vs:term_status="testing" rdfs:label="MSN chat ID" rdfs:comment="An MSN chat ID"&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/nick"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/&gt;
  &lt;/rdf:Property&gt;
&lt;!-- ....................................................... --&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/name" vs:term_status="testing" rdfs:label="name" rdfs:comment="A name for some thing."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://www.w3.org/2000/01/rdf-schema#label"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/firstName" vs:term_status="testing" rdfs:label="firstName" rdfs:comment="The first name of a person."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/lastName" vs:term_status="testing" rdfs:label="lastName" rdfs:comment="The last name of a person."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/givenName" vs:term_status="testing" rdfs:label="Given name" rdfs:comment="The given name of some person."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/givenname" vs:term_status="archaic" rdfs:label="Given name" rdfs:comment="The given name of some person."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/surname" vs:term_status="archaic" rdfs:label="Surname" rdfs:comment="The surname of some person."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/family_name" vs:term_status="archaic" rdfs:label="family_name" rdfs:comment="The family name of some person."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/familyName" vs:term_status="testing" rdfs:label="familyName" rdfs:comment="The family name of some person."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
&lt;!-- end of naming properties. See http://rdfweb.org/issues/show_bug.cgi?id=7
	   for open issue / re-design discussions.
	--&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/phone" vs:term_status="testing" rdfs:label="phone" rdfs:comment="A phone,  specified using fully qualified tel: URI scheme (refs: http://www.w3.org/Addressing/schemes.html#tel)."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/homepage" vs:term_status="stable" rdfs:label="homepage" rdfs:comment="A homepage for some thing."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/page"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/isPrimaryTopicOf"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/&gt;
    &lt;!--  previously: rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent" --&gt;
    &lt;rdfs:domain rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/weblog" vs:term_status="stable" rdfs:label="weblog" rdfs:comment="A weblog of some thing (whether person, group, company etc.)."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/page"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/openid" vs:term_status="testing" rdfs:label="openid" rdfs:comment="An OpenID for an Agent."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/isPrimaryTopicOf"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/tipjar" vs:term_status="testing" rdfs:label="tipjar" rdfs:comment="A tipjar document for this agent, describing means for payment and reward."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/page"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/plan" vs:term_status="testing" rdfs:label="plan" rdfs:comment="A .plan comment, in the tradition of finger and '.plan' files."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/made" vs:term_status="stable" rdfs:label="made" rdfs:comment="Something that was made by this agent."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;owl:inverseOf rdf:resource="http://xmlns.com/foaf/0.1/maker"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/maker"  vs:term_status="stable" rdfs:label="maker" rdfs:comment="An agent that 
made this thing."&gt;
    &lt;owl:equivalentProperty rdf:resource="http://purl.org/dc/terms/creator"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;owl:inverseOf rdf:resource="http://xmlns.com/foaf/0.1/made"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/img" vs:term_status="testing" rdfs:label="image" rdfs:comment="An image that can be used to represent some thing (ie. those depictions which are particularly representative of something, eg. one's photo on a homepage)."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Image"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/depiction"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/depiction" vs:term_status="testing" rdfs:label="depiction" rdfs:comment="A depiction of some thing."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Image"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;owl:inverseOf rdf:resource="http://xmlns.com/foaf/0.1/depicts"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/depicts" vs:term_status="testing" rdfs:label="depicts" rdfs:comment="A thing depicted in this representation."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Image"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;owl:inverseOf rdf:resource="http://xmlns.com/foaf/0.1/depiction"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/thumbnail" vs:term_status="testing" rdfs:label="thumbnail" rdfs:comment="A derived thumbnail image."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Image"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Image"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/myersBriggs" vs:term_status="testing" rdfs:label="myersBriggs" rdfs:comment="A Myers Briggs (MBTI) personality classification."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/workplaceHomepage" vs:term_status="testing" rdfs:label="workplace homepage" rdfs:comment="A workplace homepage of some person; the homepage of an organization they work for."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/workInfoHomepage" vs:term_status="testing" rdfs:label="work info homepage" rdfs:comment="A work info homepage of some person; a page about their work for some organization."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/schoolHomepage" vs:term_status="testing" rdfs:label="schoolHomepage" rdfs:comment="A homepage of a school attended by the person."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/knows" vs:term_status="stable" rdfs:label="knows" rdfs:comment="A person known by this person (indicating some level of reciprocated interaction between the parties)."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/interest" vs:term_status="testing" rdfs:label="interest" rdfs:comment="A page about a topic of interest to this person."&gt;
&lt;!-- we should distinguish the page from the topic more carefully. danbri 2002-07-08 --&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/topic_interest" vs:term_status="testing" rdfs:label="topic_interest" rdfs:comment="A thing of interest to this person."&gt;
&lt;!-- we should distinguish the page from the topic more carefully. danbri 2002-07-08 --&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/publications" vs:term_status="testing" rdfs:label="publications" rdfs:comment="A link to the publications of this person."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
&lt;!-- by libby for ILRT mappings 2001-10-31 --&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/currentProject" vs:term_status="testing" rdfs:label="current project" rdfs:comment="A current project this person works on."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/pastProject" vs:term_status="testing" rdfs:label="past project" rdfs:comment="A project this person has previously worked on."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Person"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/fundedBy" vs:term_status="archaic" rdfs:label="funded by" rdfs:comment="An organization funding a project or person."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/logo" vs:term_status="testing" rdfs:label="logo" rdfs:comment="A logo representing some thing."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/topic" vs:term_status="testing" rdfs:label="topic" rdfs:comment="A topic of some page or document."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;owl:inverseOf rdf:resource="http://xmlns.com/foaf/0.1/page"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/primaryTopic"
 vs:term_status="stable" rdfs:label="primary topic" rdfs:comment="The primary topic of some page or document."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;owl:inverseOf rdf:resource="http://xmlns.com/foaf/0.1/isPrimaryTopicOf"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/focus"  vs:term_status="testing" rdfs:label="focus" rdfs:comment="The underlying or 'focal' entity associated with some SKOS-described concept."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://www.w3.org/2004/02/skos/core#Concept" rdfs:label="Concept"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/isPrimaryTopicOf"
 vs:term_status="stable" rdfs:label="is primary topic of" rdfs:comment="A document that this thing is the primary topic of."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/&gt;
    &lt;rdfs:subPropertyOf rdf:resource="http://xmlns.com/foaf/0.1/page"/&gt;
    &lt;owl:inverseOf rdf:resource="http://xmlns.com/foaf/0.1/primaryTopic"/&gt;
    &lt;rdfs:domain rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/page" vs:term_status="stable" rdfs:label="page" rdfs:comment="A page or document about this thing."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
    &lt;owl:inverseOf rdf:resource="http://xmlns.com/foaf/0.1/topic"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/theme" vs:term_status="archaic" rdfs:label="theme" rdfs:comment="A theme."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Thing"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/account" vs:term_status="testing" rdfs:label="account" rdfs:comment="Indicates an account held by this agent."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/OnlineAccount"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/holdsAccount" vs:term_status="archaic" rdfs:label="account" rdfs:comment="Indicates an account held by this agent."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/OnlineAccount"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/accountServiceHomepage" vs:term_status="testing" rdfs:label="account service homepage" rdfs:comment="Indicates a homepage of the service provide for this online account."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/OnlineAccount"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Document"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/accountName" vs:term_status="testing" rdfs:label="account name" rdfs:comment="Indicates the name (identifier) associated with this online account."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/OnlineAccount"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;
  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/member" vs:term_status="stable" rdfs:label="member" rdfs:comment="Indicates a member of a Group"&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Group"/&gt;
    &lt;rdfs:range rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/membershipClass" vs:term_status="unstable" rdfs:label="membershipClass" rdfs:comment="Indicates the class of individuals that are a member of a Group"&gt;
    &lt;!-- maybe we should just use SPARQL or Rules, instead of trying to use OWL here --&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AnnotationProperty"/&gt;
    &lt;!-- Added to keep OWL DL from bluescreening. DON'T CROSS THE STREAMERS, etc. --&gt;
    &lt;!-- This may get dropped if it means non-DL tools don't expose it as a real property.
	 Should be fine though; I think only OWL stuff cares about AnnotationProperty.
	 Dan									 --&gt;

&lt;!--    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Group"/&gt; prose only for now...--&gt;
&lt;!--    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/&gt; --&gt;
&lt;!--    &lt;rdfs:range rdf:resource="http://www.w3.org/2002/07/owl#Class"/&gt; --&gt;

    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;


  &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/birthday" vs:term_status="unstable" rdfs:label="birthday" rdfs:comment="The birthday of this Agent, represented in mm-dd string form, eg. '12-31'."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
    &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
    &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
    &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
  &lt;/rdf:Property&gt;

   &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/age" vs:term_status="unstable" rdfs:label="age" rdfs:comment="The age in years of some agent."&gt;
    &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/&gt;
     &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
     &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
     &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
     &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
   &lt;/rdf:Property&gt;

   &lt;rdf:Property rdf:about="http://xmlns.com/foaf/0.1/status" vs:term_status="unstable" rdfs:label="status" rdfs:comment="A string expressing what the user is happy for the general public (normally) to know about their current activity."&gt;
     &lt;rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/&gt;
     &lt;rdfs:domain rdf:resource="http://xmlns.com/foaf/0.1/Agent"/&gt;
     &lt;rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/&gt;
     &lt;rdfs:isDefinedBy rdf:resource="http://xmlns.com/foaf/0.1/"/&gt;
   &lt;/rdf:Property&gt;

&lt;/rdf:RDF&gt;
let $parsed := sem:rdf-parse($foaf-ontology, "rdfxml")
return xdmp:document-insert("/foaf.xml", &lt;foaf&gt;&lt;sem:triples&gt;{$parsed}&lt;/sem:triples&gt;&lt;/foaf&gt;, xdmp:default-permissions(), "ontology")
;

cts:triples( (), (), (), (), (), cts:document-query("/foaf.xml"))</query><query active="true" focus="true" mode="xquery" name="4 Setup TDE">(: One, save the default template :)
import module namespace es = "http://marklogic.com/entity-services" at "/MarkLogic/entity-services/entity-services.xqy"; 
declare namespace tde = "http://marklogic.com/xdmp/tde";

let $et := doc("/semantic-model.xml")=&gt;es:model-from-xml()=&gt;es:extraction-template-generate()
return xdmp:document-insert("/e-commerce.tdex", $et, xdmp:default-permissions(), "http://marklogic.com/xdmp/tde");

(: make the view name unique :)
import module namespace tde = "http://marklogic.com/xdmp/tde" at "/MarkLogic/tde.xqy";

for $n in doc("/e-commerce.tdex")//tde:schema-name
return xdmp:node-replace($n, &lt;tde:schema-name&gt;ECommerce3&lt;/tde:schema-name&gt;);

(: two, insert triple patters into Customer template :)
import module namespace es = "http://marklogic.com/entity-services" at "/MarkLogic/entity-services/entity-services.xqy"; 
declare namespace tde = "http://marklogic.com/xdmp/tde";

let $customer-triples := doc("/e-commerce.tdex")//tde:template[tde:context="./Customer"]/tde:triples
return 
xdmp:node-insert-child($customer-triples,
    (
    &lt;triple xmlns="http://marklogic.com/xdmp/tde"&gt;
      &lt;subject&gt;&lt;val&gt;$subject-iri&lt;/val&gt;&lt;/subject&gt;
      &lt;predicate&gt;&lt;val&gt;sem:iri("http://marklogic.com/example/ontology/ECommerce-0.0.3/Customer/segment")&lt;/val&gt;&lt;/predicate&gt;
      &lt;object&gt;&lt;val&gt;sem:iri("http://marklogic.com/example/ontology/ECommerce-0.0.3/Segment/" || ./segment/Segment)&lt;/val&gt;&lt;/object&gt;
    &lt;/triple&gt;,
    &lt;triple xmlns="http://marklogic.com/xdmp/tde"&gt;
      &lt;subject&gt;&lt;val&gt;$subject-iri&lt;/val&gt;&lt;/subject&gt;
      &lt;predicate&gt;&lt;val&gt;sem:iri("http://marklogic.com/example/ontology/ECommerce-0.0.3/Customer/firstName")&lt;/val&gt;&lt;/predicate&gt;
      &lt;object&gt;&lt;val&gt;xs:string(./firstName)&lt;/val&gt;&lt;/object&gt;
    &lt;/triple&gt;,
    &lt;triple xmlns="http://marklogic.com/xdmp/tde"&gt;
      &lt;subject&gt;&lt;val&gt;$subject-iri&lt;/val&gt;&lt;/subject&gt;
      &lt;predicate&gt;&lt;val&gt;sem:iri("http://marklogic.com/example/ontology/ECommerce-0.0.3/Customer/lastName")&lt;/val&gt;&lt;/predicate&gt;
      &lt;object&gt;&lt;val&gt;xs:string(./lastName)&lt;/val&gt;&lt;/object&gt;
    &lt;/triple&gt;
    )
);
    
(: three, decorate Segment entities with triples :)
import module namespace es = "http://marklogic.com/entity-services" at "/MarkLogic/entity-services/entity-services.xqy"; 
declare namespace tde = "http://marklogic.com/xdmp/tde";

let $segment-triples := doc("/e-commerce.tdex")//tde:template[tde:context="./Segment"]/tde:triples
return 
xdmp:node-insert-child($segment-triples,
    &lt;triple xmlns="http://marklogic.com/xdmp/tde"&gt;
      &lt;subject&gt;&lt;val&gt;$subject-iri&lt;/val&gt;&lt;/subject&gt;
      &lt;predicate&gt;&lt;val&gt;sem:iri("http://marklogic.com/example/ontology/ECommerce-0.0.3/Segment/label")&lt;/val&gt;&lt;/predicate&gt;
      &lt;object&gt;&lt;val&gt;xs:string(./label)&lt;/val&gt;&lt;/object&gt;
    &lt;/triple&gt;);

(: four, modify paths to values in addresses to point to primary key values :)
import module namespace es = "http://marklogic.com/entity-services" at "/MarkLogic/entity-services/entity-services.xqy"; 
declare namespace tde = "http://marklogic.com/xdmp/tde";

for $customer-address in doc("/e-commerce.tdex")//tde:column[tde:name = ("shipTo", "billTo")]
return
(xdmp:node-replace($customer-address/tde:val/text(), text { $customer-address/tde:name/string() || "/Address/hash"}));

(: five, Create row template for all Addresses :)
import module namespace es = "http://marklogic.com/entity-services" at "/MarkLogic/entity-services/entity-services.xqy"; 
declare namespace tde = "http://marklogic.com/xdmp/tde";

for $address-val in doc("/e-commerce.tdex")//tde:context[. = "./Address"]
return
(xdmp:node-replace($address-val/text(), text { ".//Address" }));

    
(: six, correct context for order lines :)
import module namespace es = "http://marklogic.com/entity-services" at "/MarkLogic/entity-services/entity-services.xqy"; 
declare namespace tde = "http://marklogic.com/xdmp/tde";

for $orderLine in doc("/e-commerce.tdex")//tde:context[. = "./orderLines"]
return
(xdmp:node-replace($orderLine/text(), text { "./orderLines/OrderLine" }),
 xdmp:node-replace($orderLine/..//tde:val[text() = "../id"], &lt;tde:val&gt;../../id&lt;/tde:val&gt;)
);

(: seven, correct context for related products :)
import module namespace es = "http://marklogic.com/entity-services" at "/MarkLogic/entity-services/entity-services.xqy"; 
declare namespace tde = "http://marklogic.com/xdmp/tde";

for $orderLine in doc("/e-commerce.tdex")//tde:context[. = "./relatedProduct"]
return
(xdmp:node-replace($orderLine/text(), text { "./relatedProduct/ProductRelation" }),
 xdmp:node-replace($orderLine/..//tde:val[text() = "../sku"], &lt;tde:val&gt;../../sku&lt;/tde:val&gt;),
 xdmp:node-replace($orderLine/..//tde:val[text() = "product/Product"], &lt;tde:val&gt;product/Product/name&lt;/tde:val&gt;)
);

(: store the modified TDE in Schemas DB :)
import module namespace tde = "http://marklogic.com/xdmp/tde" at "/MarkLogic/tde.xqy";
let $modified-doc := doc("/e-commerce.tdex")
return 
("Inserted extraction template into schemas database",
 $modified-doc,
 tde:template-insert("/e-Commerce-3.tdex", $modified-doc, xdmp:default-permissions())
   )
</query><query active="true" focus="false" mode="sparql-update" name="6 Load some extra people">PREFIX foaf: &lt;http://xmlns.com/foaf/0.1/&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX : &lt;http://marklogic.com/example/foaf-people/&gt;

INSERT DATA {
  
  GRAPH &lt;http://marklogic.com/example/foaf-people&gt; {
    :1 a :Person ; foaf:givenName "Vissarion"; foaf:familyName "Belinsky" .
    :2 a :Person ; foaf:givenName "Julien"; foaf:familyName "Benda".
    :3 a :Person ; foaf:givenName "Walter"; foaf:familyName "Benjamin" .   
    :4 a :Person ; foaf:givenName "Nikolai"; foaf:familyName "Berdyaev" .
    :5 a :Person ; foaf:givenName "Henri"; foaf:familyName "Bergson" .
    :6 a :Person ; foaf:givenName "Eduard"; foaf:familyName "Bernstein" .
    :7 a :Person ; foaf:givenName "Nathan"; foaf:familyName "Birnbaum" .
    :philosophers a foaf:Group ;
                  foaf:member :1, :2, :3, :4, :5, :6, :7 ; 
                  rdfs:label "Philosophers" ;
                  rdfs:comment "A group of philosophers" .
  }
}</query></workspace></export>